//
// Generated by Bluespec Compiler, version 2021.07-10-gb37e90ec (build b37e90ec)
//
//
// Ports:
// Name                         I/O  size props
// RDY_cpu_reset_server_request_put  O     1 reg
// cpu_reset_server_response_get  O     1 reg
// RDY_cpu_reset_server_response_get  O     1 reg
// cpu_dmem_master_HADDR          O    32 reg
// cpu_dmem_master_HBURST         O     3 const
// cpu_dmem_master_HMASTLOCK      O     1 const
// cpu_dmem_master_HPROT          O     4 const
// cpu_dmem_master_HSIZE          O     3 reg
// cpu_dmem_master_HTRANS         O     2 reg
// cpu_dmem_master_HWDATA         O    32 reg
// cpu_dmem_master_HWRITE         O     1 reg
// debug_awready                  O     1 reg
// debug_wready                   O     1 reg
// debug_bvalid                   O     1 reg
// debug_bid                      O     4 reg
// debug_bresp                    O     2 reg
// debug_arready                  O     1 reg
// debug_rvalid                   O     1 reg
// debug_rid                      O     4 reg
// debug_rdata                    O    32 reg
// debug_rresp                    O     2 reg
// debug_rlast                    O     1 reg
// RDY_set_verbosity              O     1 const
// RDY_set_watch_tohost           O     1 const
// mv_tohost_value                O    64
// RDY_mv_tohost_value            O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// cpu_reset_server_request_put   I     1 reg
// cpu_dmem_master_HRDATA         I    32
// cpu_dmem_master_HREADY         I     1
// cpu_dmem_master_HRESP          I     1
// core_external_interrupt_sources_0_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_1_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_2_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_3_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_4_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_5_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_6_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_7_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_8_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_9_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_10_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_11_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_12_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_13_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_14_m_interrupt_req_set_not_clear  I     1
// core_external_interrupt_sources_15_m_interrupt_req_set_not_clear  I     1
// nmi_req_set_not_clear          I     1
// debug_awvalid                  I     1
// debug_awid                     I     4 reg
// debug_awaddr                   I    32 reg
// debug_awlen                    I     8 reg
// debug_awsize                   I     3 reg
// debug_awburst                  I     2 reg
// debug_awlock                   I     1 reg
// debug_awcache                  I     4 reg
// debug_awprot                   I     3 reg
// debug_awqos                    I     4 reg
// debug_awregion                 I     4 reg
// debug_wvalid                   I     1
// debug_wdata                    I    32 reg
// debug_wstrb                    I     4 reg
// debug_wlast                    I     1 reg
// debug_bready                   I     1
// debug_arvalid                  I     1
// debug_arid                     I     4 reg
// debug_araddr                   I    32 reg
// debug_arlen                    I     8 reg
// debug_arsize                   I     3 reg
// debug_arburst                  I     2 reg
// debug_arlock                   I     1 reg
// debug_arcache                  I     4 reg
// debug_arprot                   I     3 reg
// debug_arqos                    I     4 reg
// debug_arregion                 I     4 reg
// debug_rready                   I     1
// set_verbosity_verbosity        I     4
// set_verbosity_logdelay         I    64 reg
// set_watch_tohost_watch_tohost  I     1 reg
// set_watch_tohost_tohost_addr   I    64 reg
// EN_cpu_reset_server_request_put  I     1
// EN_set_verbosity               I     1
// EN_set_watch_tohost            I     1
// EN_cpu_reset_server_response_get  I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCore(CLK,
	      RST_N,

	      cpu_reset_server_request_put,
	      EN_cpu_reset_server_request_put,
	      RDY_cpu_reset_server_request_put,

	      EN_cpu_reset_server_response_get,
	      cpu_reset_server_response_get,
	      RDY_cpu_reset_server_response_get,

	      cpu_dmem_master_HADDR,

	      cpu_dmem_master_HBURST,

	      cpu_dmem_master_HMASTLOCK,

	      cpu_dmem_master_HPROT,

	      cpu_dmem_master_HSIZE,

	      cpu_dmem_master_HTRANS,

	      cpu_dmem_master_HWDATA,

	      cpu_dmem_master_HWRITE,

	      cpu_dmem_master_HRDATA,

	      cpu_dmem_master_HREADY,

	      cpu_dmem_master_HRESP,

	      core_external_interrupt_sources_0_m_interrupt_req_set_not_clear,

	      core_external_interrupt_sources_1_m_interrupt_req_set_not_clear,

	      core_external_interrupt_sources_2_m_interrupt_req_set_not_clear,

	      core_external_interrupt_sources_3_m_interrupt_req_set_not_clear,

	      core_external_interrupt_sources_4_m_interrupt_req_set_not_clear,

	      core_external_interrupt_sources_5_m_interrupt_req_set_not_clear,

	      core_external_interrupt_sources_6_m_interrupt_req_set_not_clear,

	      core_external_interrupt_sources_7_m_interrupt_req_set_not_clear,

	      core_external_interrupt_sources_8_m_interrupt_req_set_not_clear,

	      core_external_interrupt_sources_9_m_interrupt_req_set_not_clear,

	      core_external_interrupt_sources_10_m_interrupt_req_set_not_clear,

	      core_external_interrupt_sources_11_m_interrupt_req_set_not_clear,

	      core_external_interrupt_sources_12_m_interrupt_req_set_not_clear,

	      core_external_interrupt_sources_13_m_interrupt_req_set_not_clear,

	      core_external_interrupt_sources_14_m_interrupt_req_set_not_clear,

	      core_external_interrupt_sources_15_m_interrupt_req_set_not_clear,

	      nmi_req_set_not_clear,

	      debug_awvalid,
	      debug_awid,
	      debug_awaddr,
	      debug_awlen,
	      debug_awsize,
	      debug_awburst,
	      debug_awlock,
	      debug_awcache,
	      debug_awprot,
	      debug_awqos,
	      debug_awregion,

	      debug_awready,

	      debug_wvalid,
	      debug_wdata,
	      debug_wstrb,
	      debug_wlast,

	      debug_wready,

	      debug_bvalid,

	      debug_bid,

	      debug_bresp,

	      debug_bready,

	      debug_arvalid,
	      debug_arid,
	      debug_araddr,
	      debug_arlen,
	      debug_arsize,
	      debug_arburst,
	      debug_arlock,
	      debug_arcache,
	      debug_arprot,
	      debug_arqos,
	      debug_arregion,

	      debug_arready,

	      debug_rvalid,

	      debug_rid,

	      debug_rdata,

	      debug_rresp,

	      debug_rlast,

	      debug_rready,

	      set_verbosity_verbosity,
	      set_verbosity_logdelay,
	      EN_set_verbosity,
	      RDY_set_verbosity,

	      set_watch_tohost_watch_tohost,
	      set_watch_tohost_tohost_addr,
	      EN_set_watch_tohost,
	      RDY_set_watch_tohost,

	      mv_tohost_value,
	      RDY_mv_tohost_value);
  input  CLK;
  input  RST_N;

  // action method cpu_reset_server_request_put
  input  cpu_reset_server_request_put;
  input  EN_cpu_reset_server_request_put;
  output RDY_cpu_reset_server_request_put;

  // actionvalue method cpu_reset_server_response_get
  input  EN_cpu_reset_server_response_get;
  output cpu_reset_server_response_get;
  output RDY_cpu_reset_server_response_get;

  // value method cpu_dmem_master_haddr
  output [31 : 0] cpu_dmem_master_HADDR;

  // value method cpu_dmem_master_hburst
  output [2 : 0] cpu_dmem_master_HBURST;

  // value method cpu_dmem_master_hmastlock
  output cpu_dmem_master_HMASTLOCK;

  // value method cpu_dmem_master_hprot
  output [3 : 0] cpu_dmem_master_HPROT;

  // value method cpu_dmem_master_hsize
  output [2 : 0] cpu_dmem_master_HSIZE;

  // value method cpu_dmem_master_htrans
  output [1 : 0] cpu_dmem_master_HTRANS;

  // value method cpu_dmem_master_hwdata
  output [31 : 0] cpu_dmem_master_HWDATA;

  // value method cpu_dmem_master_hwrite
  output cpu_dmem_master_HWRITE;

  // action method cpu_dmem_master_hrdata
  input  [31 : 0] cpu_dmem_master_HRDATA;

  // action method cpu_dmem_master_hready
  input  cpu_dmem_master_HREADY;

  // action method cpu_dmem_master_hresp
  input  cpu_dmem_master_HRESP;

  // action method core_external_interrupt_sources_0_m_interrupt_req
  input  core_external_interrupt_sources_0_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_1_m_interrupt_req
  input  core_external_interrupt_sources_1_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_2_m_interrupt_req
  input  core_external_interrupt_sources_2_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_3_m_interrupt_req
  input  core_external_interrupt_sources_3_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_4_m_interrupt_req
  input  core_external_interrupt_sources_4_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_5_m_interrupt_req
  input  core_external_interrupt_sources_5_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_6_m_interrupt_req
  input  core_external_interrupt_sources_6_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_7_m_interrupt_req
  input  core_external_interrupt_sources_7_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_8_m_interrupt_req
  input  core_external_interrupt_sources_8_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_9_m_interrupt_req
  input  core_external_interrupt_sources_9_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_10_m_interrupt_req
  input  core_external_interrupt_sources_10_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_11_m_interrupt_req
  input  core_external_interrupt_sources_11_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_12_m_interrupt_req
  input  core_external_interrupt_sources_12_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_13_m_interrupt_req
  input  core_external_interrupt_sources_13_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_14_m_interrupt_req
  input  core_external_interrupt_sources_14_m_interrupt_req_set_not_clear;

  // action method core_external_interrupt_sources_15_m_interrupt_req
  input  core_external_interrupt_sources_15_m_interrupt_req_set_not_clear;

  // action method nmi_req
  input  nmi_req_set_not_clear;

  // action method debug_m_awvalid
  input  debug_awvalid;
  input  [3 : 0] debug_awid;
  input  [31 : 0] debug_awaddr;
  input  [7 : 0] debug_awlen;
  input  [2 : 0] debug_awsize;
  input  [1 : 0] debug_awburst;
  input  debug_awlock;
  input  [3 : 0] debug_awcache;
  input  [2 : 0] debug_awprot;
  input  [3 : 0] debug_awqos;
  input  [3 : 0] debug_awregion;

  // value method debug_m_awready
  output debug_awready;

  // action method debug_m_wvalid
  input  debug_wvalid;
  input  [31 : 0] debug_wdata;
  input  [3 : 0] debug_wstrb;
  input  debug_wlast;

  // value method debug_m_wready
  output debug_wready;

  // value method debug_m_bvalid
  output debug_bvalid;

  // value method debug_m_bid
  output [3 : 0] debug_bid;

  // value method debug_m_bresp
  output [1 : 0] debug_bresp;

  // value method debug_m_buser

  // action method debug_m_bready
  input  debug_bready;

  // action method debug_m_arvalid
  input  debug_arvalid;
  input  [3 : 0] debug_arid;
  input  [31 : 0] debug_araddr;
  input  [7 : 0] debug_arlen;
  input  [2 : 0] debug_arsize;
  input  [1 : 0] debug_arburst;
  input  debug_arlock;
  input  [3 : 0] debug_arcache;
  input  [2 : 0] debug_arprot;
  input  [3 : 0] debug_arqos;
  input  [3 : 0] debug_arregion;

  // value method debug_m_arready
  output debug_arready;

  // value method debug_m_rvalid
  output debug_rvalid;

  // value method debug_m_rid
  output [3 : 0] debug_rid;

  // value method debug_m_rdata
  output [31 : 0] debug_rdata;

  // value method debug_m_rresp
  output [1 : 0] debug_rresp;

  // value method debug_m_rlast
  output debug_rlast;

  // value method debug_m_ruser

  // action method debug_m_rready
  input  debug_rready;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  [63 : 0] set_verbosity_logdelay;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method set_watch_tohost
  input  set_watch_tohost_watch_tohost;
  input  [63 : 0] set_watch_tohost_tohost_addr;
  input  EN_set_watch_tohost;
  output RDY_set_watch_tohost;

  // value method mv_tohost_value
  output [63 : 0] mv_tohost_value;
  output RDY_mv_tohost_value;

  // signals for module outputs
  wire [63 : 0] mv_tohost_value;
  wire [31 : 0] cpu_dmem_master_HADDR, cpu_dmem_master_HWDATA, debug_rdata;
  wire [3 : 0] cpu_dmem_master_HPROT, debug_bid, debug_rid;
  wire [2 : 0] cpu_dmem_master_HBURST, cpu_dmem_master_HSIZE;
  wire [1 : 0] cpu_dmem_master_HTRANS, debug_bresp, debug_rresp;
  wire RDY_cpu_reset_server_request_put,
       RDY_cpu_reset_server_response_get,
       RDY_mv_tohost_value,
       RDY_set_verbosity,
       RDY_set_watch_tohost,
       cpu_dmem_master_HMASTLOCK,
       cpu_dmem_master_HWRITE,
       cpu_reset_server_response_get,
       debug_arready,
       debug_awready,
       debug_bvalid,
       debug_rlast,
       debug_rvalid,
       debug_wready;

  // register dm_stub_rg_bursting
  reg dm_stub_rg_bursting;
  wire dm_stub_rg_bursting$D_IN, dm_stub_rg_bursting$EN;

  // register dm_stub_rg_writing
  reg dm_stub_rg_writing;
  wire dm_stub_rg_writing$D_IN, dm_stub_rg_writing$EN;

  // ports of submodule clint
  wire [31 : 0] clint$axi4_slave_araddr,
		clint$axi4_slave_awaddr,
		clint$axi4_slave_rdata,
		clint$axi4_slave_wdata,
		clint$set_addr_map_addr_base,
		clint$set_addr_map_addr_lim;
  wire [7 : 0] clint$axi4_slave_arlen, clint$axi4_slave_awlen;
  wire [3 : 0] clint$axi4_slave_arcache,
	       clint$axi4_slave_arid,
	       clint$axi4_slave_arqos,
	       clint$axi4_slave_arregion,
	       clint$axi4_slave_awcache,
	       clint$axi4_slave_awid,
	       clint$axi4_slave_awqos,
	       clint$axi4_slave_awregion,
	       clint$axi4_slave_bid,
	       clint$axi4_slave_rid,
	       clint$axi4_slave_wstrb;
  wire [2 : 0] clint$axi4_slave_arprot,
	       clint$axi4_slave_arsize,
	       clint$axi4_slave_awprot,
	       clint$axi4_slave_awsize;
  wire [1 : 0] clint$axi4_slave_arburst,
	       clint$axi4_slave_awburst,
	       clint$axi4_slave_bresp,
	       clint$axi4_slave_rresp;
  wire clint$EN_get_sw_interrupt_req_get,
       clint$EN_get_timer_interrupt_req_get,
       clint$EN_server_reset_request_put,
       clint$EN_server_reset_response_get,
       clint$EN_set_addr_map,
       clint$RDY_get_sw_interrupt_req_get,
       clint$RDY_get_timer_interrupt_req_get,
       clint$RDY_server_reset_request_put,
       clint$RDY_server_reset_response_get,
       clint$axi4_slave_arlock,
       clint$axi4_slave_arready,
       clint$axi4_slave_arvalid,
       clint$axi4_slave_awlock,
       clint$axi4_slave_awready,
       clint$axi4_slave_awvalid,
       clint$axi4_slave_bready,
       clint$axi4_slave_bvalid,
       clint$axi4_slave_rlast,
       clint$axi4_slave_rready,
       clint$axi4_slave_rvalid,
       clint$axi4_slave_wlast,
       clint$axi4_slave_wready,
       clint$axi4_slave_wvalid,
       clint$get_sw_interrupt_req_get,
       clint$get_timer_interrupt_req_get;

  // ports of submodule cpu
  wire [63 : 0] cpu$mv_tohost_value,
		cpu$set_verbosity_logdelay,
		cpu$set_watch_tohost_tohost_addr;
  wire [44 : 0] cpu$debug_hart_csr_mem_server_request_put;
  wire [37 : 0] cpu$debug_hart_gpr_mem_server_request_put;
  wire [32 : 0] cpu$debug_hart_csr_mem_server_response_get,
		cpu$debug_hart_gpr_mem_server_response_get;
  wire [31 : 0] cpu$dmem_dma_server_araddr,
		cpu$dmem_dma_server_awaddr,
		cpu$dmem_dma_server_rdata,
		cpu$dmem_dma_server_wdata,
		cpu$dmem_master_HADDR,
		cpu$dmem_master_HRDATA,
		cpu$dmem_master_HWDATA,
		cpu$imem_dma_server_araddr,
		cpu$imem_dma_server_awaddr,
		cpu$imem_dma_server_rdata,
		cpu$imem_dma_server_wdata,
		cpu$nmio_master_araddr,
		cpu$nmio_master_awaddr,
		cpu$nmio_master_rdata,
		cpu$nmio_master_wdata;
  wire [7 : 0] cpu$dmem_dma_server_arlen,
	       cpu$dmem_dma_server_awlen,
	       cpu$imem_dma_server_arlen,
	       cpu$imem_dma_server_awlen,
	       cpu$nmio_master_arlen,
	       cpu$nmio_master_awlen;
  wire [3 : 0] cpu$debug_hart_put_other_req_put,
	       cpu$dmem_dma_server_arcache,
	       cpu$dmem_dma_server_arid,
	       cpu$dmem_dma_server_arqos,
	       cpu$dmem_dma_server_arregion,
	       cpu$dmem_dma_server_awcache,
	       cpu$dmem_dma_server_awid,
	       cpu$dmem_dma_server_awqos,
	       cpu$dmem_dma_server_awregion,
	       cpu$dmem_dma_server_bid,
	       cpu$dmem_dma_server_rid,
	       cpu$dmem_dma_server_wstrb,
	       cpu$dmem_master_HPROT,
	       cpu$imem_dma_server_arcache,
	       cpu$imem_dma_server_arid,
	       cpu$imem_dma_server_arqos,
	       cpu$imem_dma_server_arregion,
	       cpu$imem_dma_server_awcache,
	       cpu$imem_dma_server_awid,
	       cpu$imem_dma_server_awqos,
	       cpu$imem_dma_server_awregion,
	       cpu$imem_dma_server_bid,
	       cpu$imem_dma_server_rid,
	       cpu$imem_dma_server_wstrb,
	       cpu$nmio_master_arcache,
	       cpu$nmio_master_arid,
	       cpu$nmio_master_arqos,
	       cpu$nmio_master_arregion,
	       cpu$nmio_master_awcache,
	       cpu$nmio_master_awid,
	       cpu$nmio_master_awqos,
	       cpu$nmio_master_awregion,
	       cpu$nmio_master_bid,
	       cpu$nmio_master_rid,
	       cpu$nmio_master_wstrb,
	       cpu$set_verbosity_verbosity;
  wire [2 : 0] cpu$dmem_dma_server_arprot,
	       cpu$dmem_dma_server_arsize,
	       cpu$dmem_dma_server_awprot,
	       cpu$dmem_dma_server_awsize,
	       cpu$dmem_master_HBURST,
	       cpu$dmem_master_HSIZE,
	       cpu$imem_dma_server_arprot,
	       cpu$imem_dma_server_arsize,
	       cpu$imem_dma_server_awprot,
	       cpu$imem_dma_server_awsize,
	       cpu$nmio_master_arprot,
	       cpu$nmio_master_arsize,
	       cpu$nmio_master_awprot,
	       cpu$nmio_master_awsize;
  wire [1 : 0] cpu$dmem_dma_server_arburst,
	       cpu$dmem_dma_server_awburst,
	       cpu$dmem_dma_server_bresp,
	       cpu$dmem_dma_server_rresp,
	       cpu$dmem_master_HTRANS,
	       cpu$imem_dma_server_arburst,
	       cpu$imem_dma_server_awburst,
	       cpu$imem_dma_server_bresp,
	       cpu$imem_dma_server_rresp,
	       cpu$nmio_master_arburst,
	       cpu$nmio_master_awburst,
	       cpu$nmio_master_bresp,
	       cpu$nmio_master_rresp;
  wire cpu$EN_debug_hart_csr_mem_server_request_put,
       cpu$EN_debug_hart_csr_mem_server_response_get,
       cpu$EN_debug_hart_gpr_mem_server_request_put,
       cpu$EN_debug_hart_gpr_mem_server_response_get,
       cpu$EN_debug_hart_put_other_req_put,
       cpu$EN_debug_hart_reset_server_request_put,
       cpu$EN_debug_hart_reset_server_response_get,
       cpu$EN_debug_hart_server_run_halt_request_put,
       cpu$EN_debug_hart_server_run_halt_response_get,
       cpu$EN_set_verbosity,
       cpu$EN_set_watch_tohost,
       cpu$RDY_debug_hart_csr_mem_server_request_put,
       cpu$RDY_debug_hart_csr_mem_server_response_get,
       cpu$RDY_debug_hart_gpr_mem_server_request_put,
       cpu$RDY_debug_hart_gpr_mem_server_response_get,
       cpu$RDY_debug_hart_reset_server_request_put,
       cpu$RDY_debug_hart_reset_server_response_get,
       cpu$RDY_debug_hart_server_run_halt_request_put,
       cpu$RDY_debug_hart_server_run_halt_response_get,
       cpu$debug_hart_reset_server_request_put,
       cpu$debug_hart_reset_server_response_get,
       cpu$debug_hart_server_run_halt_request_put,
       cpu$debug_hart_server_run_halt_response_get,
       cpu$dmem_dma_server_arlock,
       cpu$dmem_dma_server_arready,
       cpu$dmem_dma_server_arvalid,
       cpu$dmem_dma_server_awlock,
       cpu$dmem_dma_server_awready,
       cpu$dmem_dma_server_awvalid,
       cpu$dmem_dma_server_bready,
       cpu$dmem_dma_server_bvalid,
       cpu$dmem_dma_server_rlast,
       cpu$dmem_dma_server_rready,
       cpu$dmem_dma_server_rvalid,
       cpu$dmem_dma_server_wlast,
       cpu$dmem_dma_server_wready,
       cpu$dmem_dma_server_wvalid,
       cpu$dmem_master_HMASTLOCK,
       cpu$dmem_master_HREADY,
       cpu$dmem_master_HRESP,
       cpu$dmem_master_HWRITE,
       cpu$imem_dma_server_arlock,
       cpu$imem_dma_server_arready,
       cpu$imem_dma_server_arvalid,
       cpu$imem_dma_server_awlock,
       cpu$imem_dma_server_awready,
       cpu$imem_dma_server_awvalid,
       cpu$imem_dma_server_bready,
       cpu$imem_dma_server_bvalid,
       cpu$imem_dma_server_rlast,
       cpu$imem_dma_server_rready,
       cpu$imem_dma_server_rvalid,
       cpu$imem_dma_server_wlast,
       cpu$imem_dma_server_wready,
       cpu$imem_dma_server_wvalid,
       cpu$m_external_interrupt_req_set_not_clear,
       cpu$nmi_req_set_not_clear,
       cpu$nmio_master_arlock,
       cpu$nmio_master_arready,
       cpu$nmio_master_arvalid,
       cpu$nmio_master_awlock,
       cpu$nmio_master_awready,
       cpu$nmio_master_awvalid,
       cpu$nmio_master_bready,
       cpu$nmio_master_bvalid,
       cpu$nmio_master_rlast,
       cpu$nmio_master_rready,
       cpu$nmio_master_rvalid,
       cpu$nmio_master_wlast,
       cpu$nmio_master_wready,
       cpu$nmio_master_wvalid,
       cpu$s_external_interrupt_req_set_not_clear,
       cpu$set_watch_tohost_watch_tohost,
       cpu$software_interrupt_req_set_not_clear,
       cpu$timer_interrupt_req_set_not_clear;

  // ports of submodule dm_stub_input_Xactor_f_rd_addr
  wire [64 : 0] dm_stub_input_Xactor_f_rd_addr$D_IN,
		dm_stub_input_Xactor_f_rd_addr$D_OUT;
  wire dm_stub_input_Xactor_f_rd_addr$CLR,
       dm_stub_input_Xactor_f_rd_addr$DEQ,
       dm_stub_input_Xactor_f_rd_addr$EMPTY_N,
       dm_stub_input_Xactor_f_rd_addr$ENQ,
       dm_stub_input_Xactor_f_rd_addr$FULL_N;

  // ports of submodule dm_stub_input_Xactor_f_rd_data
  reg [38 : 0] dm_stub_input_Xactor_f_rd_data$D_IN;
  wire [38 : 0] dm_stub_input_Xactor_f_rd_data$D_OUT;
  wire dm_stub_input_Xactor_f_rd_data$CLR,
       dm_stub_input_Xactor_f_rd_data$DEQ,
       dm_stub_input_Xactor_f_rd_data$EMPTY_N,
       dm_stub_input_Xactor_f_rd_data$ENQ,
       dm_stub_input_Xactor_f_rd_data$FULL_N;

  // ports of submodule dm_stub_input_Xactor_f_wr_addr
  wire [64 : 0] dm_stub_input_Xactor_f_wr_addr$D_IN,
		dm_stub_input_Xactor_f_wr_addr$D_OUT;
  wire dm_stub_input_Xactor_f_wr_addr$CLR,
       dm_stub_input_Xactor_f_wr_addr$DEQ,
       dm_stub_input_Xactor_f_wr_addr$EMPTY_N,
       dm_stub_input_Xactor_f_wr_addr$ENQ,
       dm_stub_input_Xactor_f_wr_addr$FULL_N;

  // ports of submodule dm_stub_input_Xactor_f_wr_data
  wire [36 : 0] dm_stub_input_Xactor_f_wr_data$D_IN,
		dm_stub_input_Xactor_f_wr_data$D_OUT;
  wire dm_stub_input_Xactor_f_wr_data$CLR,
       dm_stub_input_Xactor_f_wr_data$DEQ,
       dm_stub_input_Xactor_f_wr_data$EMPTY_N,
       dm_stub_input_Xactor_f_wr_data$ENQ,
       dm_stub_input_Xactor_f_wr_data$FULL_N;

  // ports of submodule dm_stub_input_Xactor_f_wr_resp
  reg [5 : 0] dm_stub_input_Xactor_f_wr_resp$D_IN;
  wire [5 : 0] dm_stub_input_Xactor_f_wr_resp$D_OUT;
  wire dm_stub_input_Xactor_f_wr_resp$CLR,
       dm_stub_input_Xactor_f_wr_resp$DEQ,
       dm_stub_input_Xactor_f_wr_resp$EMPTY_N,
       dm_stub_input_Xactor_f_wr_resp$ENQ,
       dm_stub_input_Xactor_f_wr_resp$FULL_N;

  // ports of submodule dm_stub_sbus_master_f_rd_addr
  wire [64 : 0] dm_stub_sbus_master_f_rd_addr$D_IN,
		dm_stub_sbus_master_f_rd_addr$D_OUT;
  wire dm_stub_sbus_master_f_rd_addr$CLR,
       dm_stub_sbus_master_f_rd_addr$DEQ,
       dm_stub_sbus_master_f_rd_addr$EMPTY_N,
       dm_stub_sbus_master_f_rd_addr$ENQ,
       dm_stub_sbus_master_f_rd_addr$FULL_N;

  // ports of submodule dm_stub_sbus_master_f_rd_data
  wire [38 : 0] dm_stub_sbus_master_f_rd_data$D_IN,
		dm_stub_sbus_master_f_rd_data$D_OUT;
  wire dm_stub_sbus_master_f_rd_data$CLR,
       dm_stub_sbus_master_f_rd_data$DEQ,
       dm_stub_sbus_master_f_rd_data$EMPTY_N,
       dm_stub_sbus_master_f_rd_data$ENQ,
       dm_stub_sbus_master_f_rd_data$FULL_N;

  // ports of submodule dm_stub_sbus_master_f_wr_addr
  wire [64 : 0] dm_stub_sbus_master_f_wr_addr$D_IN,
		dm_stub_sbus_master_f_wr_addr$D_OUT;
  wire dm_stub_sbus_master_f_wr_addr$CLR,
       dm_stub_sbus_master_f_wr_addr$DEQ,
       dm_stub_sbus_master_f_wr_addr$EMPTY_N,
       dm_stub_sbus_master_f_wr_addr$ENQ,
       dm_stub_sbus_master_f_wr_addr$FULL_N;

  // ports of submodule dm_stub_sbus_master_f_wr_data
  wire [36 : 0] dm_stub_sbus_master_f_wr_data$D_IN,
		dm_stub_sbus_master_f_wr_data$D_OUT;
  wire dm_stub_sbus_master_f_wr_data$CLR,
       dm_stub_sbus_master_f_wr_data$DEQ,
       dm_stub_sbus_master_f_wr_data$EMPTY_N,
       dm_stub_sbus_master_f_wr_data$ENQ,
       dm_stub_sbus_master_f_wr_data$FULL_N;

  // ports of submodule dm_stub_sbus_master_f_wr_resp
  wire [5 : 0] dm_stub_sbus_master_f_wr_resp$D_IN,
	       dm_stub_sbus_master_f_wr_resp$D_OUT;
  wire dm_stub_sbus_master_f_wr_resp$CLR,
       dm_stub_sbus_master_f_wr_resp$DEQ,
       dm_stub_sbus_master_f_wr_resp$EMPTY_N,
       dm_stub_sbus_master_f_wr_resp$ENQ,
       dm_stub_sbus_master_f_wr_resp$FULL_N;

  // ports of submodule f_reset_reqs
  wire f_reset_reqs$CLR,
       f_reset_reqs$DEQ,
       f_reset_reqs$D_IN,
       f_reset_reqs$D_OUT,
       f_reset_reqs$EMPTY_N,
       f_reset_reqs$ENQ,
       f_reset_reqs$FULL_N;

  // ports of submodule f_reset_requestor
  wire f_reset_requestor$CLR,
       f_reset_requestor$DEQ,
       f_reset_requestor$D_IN,
       f_reset_requestor$D_OUT,
       f_reset_requestor$EMPTY_N,
       f_reset_requestor$ENQ,
       f_reset_requestor$FULL_N;

  // ports of submodule f_reset_rsps
  wire f_reset_rsps$CLR,
       f_reset_rsps$DEQ,
       f_reset_rsps$D_IN,
       f_reset_rsps$D_OUT,
       f_reset_rsps$EMPTY_N,
       f_reset_rsps$ENQ,
       f_reset_rsps$FULL_N;

  // ports of submodule local_fabric
  wire [31 : 0] local_fabric$v_from_masters_0_araddr,
		local_fabric$v_from_masters_0_awaddr,
		local_fabric$v_from_masters_0_rdata,
		local_fabric$v_from_masters_0_wdata,
		local_fabric$v_from_masters_1_araddr,
		local_fabric$v_from_masters_1_awaddr,
		local_fabric$v_from_masters_1_rdata,
		local_fabric$v_from_masters_1_wdata,
		local_fabric$v_to_slaves_0_araddr,
		local_fabric$v_to_slaves_0_awaddr,
		local_fabric$v_to_slaves_0_rdata,
		local_fabric$v_to_slaves_0_wdata,
		local_fabric$v_to_slaves_1_araddr,
		local_fabric$v_to_slaves_1_awaddr,
		local_fabric$v_to_slaves_1_rdata,
		local_fabric$v_to_slaves_1_wdata,
		local_fabric$v_to_slaves_2_araddr,
		local_fabric$v_to_slaves_2_awaddr,
		local_fabric$v_to_slaves_2_rdata,
		local_fabric$v_to_slaves_2_wdata,
		local_fabric$v_to_slaves_3_araddr,
		local_fabric$v_to_slaves_3_awaddr,
		local_fabric$v_to_slaves_3_rdata,
		local_fabric$v_to_slaves_3_wdata;
  wire [7 : 0] local_fabric$v_from_masters_0_arlen,
	       local_fabric$v_from_masters_0_awlen,
	       local_fabric$v_from_masters_1_arlen,
	       local_fabric$v_from_masters_1_awlen,
	       local_fabric$v_to_slaves_0_arlen,
	       local_fabric$v_to_slaves_0_awlen,
	       local_fabric$v_to_slaves_1_arlen,
	       local_fabric$v_to_slaves_1_awlen,
	       local_fabric$v_to_slaves_2_arlen,
	       local_fabric$v_to_slaves_2_awlen,
	       local_fabric$v_to_slaves_3_arlen,
	       local_fabric$v_to_slaves_3_awlen;
  wire [3 : 0] local_fabric$set_verbosity_verbosity,
	       local_fabric$v_from_masters_0_arcache,
	       local_fabric$v_from_masters_0_arid,
	       local_fabric$v_from_masters_0_arqos,
	       local_fabric$v_from_masters_0_arregion,
	       local_fabric$v_from_masters_0_awcache,
	       local_fabric$v_from_masters_0_awid,
	       local_fabric$v_from_masters_0_awqos,
	       local_fabric$v_from_masters_0_awregion,
	       local_fabric$v_from_masters_0_bid,
	       local_fabric$v_from_masters_0_rid,
	       local_fabric$v_from_masters_0_wstrb,
	       local_fabric$v_from_masters_1_arcache,
	       local_fabric$v_from_masters_1_arid,
	       local_fabric$v_from_masters_1_arqos,
	       local_fabric$v_from_masters_1_arregion,
	       local_fabric$v_from_masters_1_awcache,
	       local_fabric$v_from_masters_1_awid,
	       local_fabric$v_from_masters_1_awqos,
	       local_fabric$v_from_masters_1_awregion,
	       local_fabric$v_from_masters_1_bid,
	       local_fabric$v_from_masters_1_rid,
	       local_fabric$v_from_masters_1_wstrb,
	       local_fabric$v_to_slaves_0_arcache,
	       local_fabric$v_to_slaves_0_arid,
	       local_fabric$v_to_slaves_0_arqos,
	       local_fabric$v_to_slaves_0_arregion,
	       local_fabric$v_to_slaves_0_awcache,
	       local_fabric$v_to_slaves_0_awid,
	       local_fabric$v_to_slaves_0_awqos,
	       local_fabric$v_to_slaves_0_awregion,
	       local_fabric$v_to_slaves_0_bid,
	       local_fabric$v_to_slaves_0_rid,
	       local_fabric$v_to_slaves_0_wstrb,
	       local_fabric$v_to_slaves_1_arcache,
	       local_fabric$v_to_slaves_1_arid,
	       local_fabric$v_to_slaves_1_arqos,
	       local_fabric$v_to_slaves_1_arregion,
	       local_fabric$v_to_slaves_1_awcache,
	       local_fabric$v_to_slaves_1_awid,
	       local_fabric$v_to_slaves_1_awqos,
	       local_fabric$v_to_slaves_1_awregion,
	       local_fabric$v_to_slaves_1_bid,
	       local_fabric$v_to_slaves_1_rid,
	       local_fabric$v_to_slaves_1_wstrb,
	       local_fabric$v_to_slaves_2_arcache,
	       local_fabric$v_to_slaves_2_arid,
	       local_fabric$v_to_slaves_2_arqos,
	       local_fabric$v_to_slaves_2_arregion,
	       local_fabric$v_to_slaves_2_awcache,
	       local_fabric$v_to_slaves_2_awid,
	       local_fabric$v_to_slaves_2_awqos,
	       local_fabric$v_to_slaves_2_awregion,
	       local_fabric$v_to_slaves_2_bid,
	       local_fabric$v_to_slaves_2_rid,
	       local_fabric$v_to_slaves_2_wstrb,
	       local_fabric$v_to_slaves_3_arcache,
	       local_fabric$v_to_slaves_3_arid,
	       local_fabric$v_to_slaves_3_arqos,
	       local_fabric$v_to_slaves_3_arregion,
	       local_fabric$v_to_slaves_3_awcache,
	       local_fabric$v_to_slaves_3_awid,
	       local_fabric$v_to_slaves_3_awqos,
	       local_fabric$v_to_slaves_3_awregion,
	       local_fabric$v_to_slaves_3_bid,
	       local_fabric$v_to_slaves_3_rid,
	       local_fabric$v_to_slaves_3_wstrb;
  wire [2 : 0] local_fabric$v_from_masters_0_arprot,
	       local_fabric$v_from_masters_0_arsize,
	       local_fabric$v_from_masters_0_awprot,
	       local_fabric$v_from_masters_0_awsize,
	       local_fabric$v_from_masters_1_arprot,
	       local_fabric$v_from_masters_1_arsize,
	       local_fabric$v_from_masters_1_awprot,
	       local_fabric$v_from_masters_1_awsize,
	       local_fabric$v_to_slaves_0_arprot,
	       local_fabric$v_to_slaves_0_arsize,
	       local_fabric$v_to_slaves_0_awprot,
	       local_fabric$v_to_slaves_0_awsize,
	       local_fabric$v_to_slaves_1_arprot,
	       local_fabric$v_to_slaves_1_arsize,
	       local_fabric$v_to_slaves_1_awprot,
	       local_fabric$v_to_slaves_1_awsize,
	       local_fabric$v_to_slaves_2_arprot,
	       local_fabric$v_to_slaves_2_arsize,
	       local_fabric$v_to_slaves_2_awprot,
	       local_fabric$v_to_slaves_2_awsize,
	       local_fabric$v_to_slaves_3_arprot,
	       local_fabric$v_to_slaves_3_arsize,
	       local_fabric$v_to_slaves_3_awprot,
	       local_fabric$v_to_slaves_3_awsize;
  wire [1 : 0] local_fabric$v_from_masters_0_arburst,
	       local_fabric$v_from_masters_0_awburst,
	       local_fabric$v_from_masters_0_bresp,
	       local_fabric$v_from_masters_0_rresp,
	       local_fabric$v_from_masters_1_arburst,
	       local_fabric$v_from_masters_1_awburst,
	       local_fabric$v_from_masters_1_bresp,
	       local_fabric$v_from_masters_1_rresp,
	       local_fabric$v_to_slaves_0_arburst,
	       local_fabric$v_to_slaves_0_awburst,
	       local_fabric$v_to_slaves_0_bresp,
	       local_fabric$v_to_slaves_0_rresp,
	       local_fabric$v_to_slaves_1_arburst,
	       local_fabric$v_to_slaves_1_awburst,
	       local_fabric$v_to_slaves_1_bresp,
	       local_fabric$v_to_slaves_1_rresp,
	       local_fabric$v_to_slaves_2_arburst,
	       local_fabric$v_to_slaves_2_awburst,
	       local_fabric$v_to_slaves_2_bresp,
	       local_fabric$v_to_slaves_2_rresp,
	       local_fabric$v_to_slaves_3_arburst,
	       local_fabric$v_to_slaves_3_awburst,
	       local_fabric$v_to_slaves_3_bresp,
	       local_fabric$v_to_slaves_3_rresp;
  wire local_fabric$EN_reset,
       local_fabric$EN_set_verbosity,
       local_fabric$RDY_reset,
       local_fabric$v_from_masters_0_arlock,
       local_fabric$v_from_masters_0_arready,
       local_fabric$v_from_masters_0_arvalid,
       local_fabric$v_from_masters_0_awlock,
       local_fabric$v_from_masters_0_awready,
       local_fabric$v_from_masters_0_awvalid,
       local_fabric$v_from_masters_0_bready,
       local_fabric$v_from_masters_0_bvalid,
       local_fabric$v_from_masters_0_rlast,
       local_fabric$v_from_masters_0_rready,
       local_fabric$v_from_masters_0_rvalid,
       local_fabric$v_from_masters_0_wlast,
       local_fabric$v_from_masters_0_wready,
       local_fabric$v_from_masters_0_wvalid,
       local_fabric$v_from_masters_1_arlock,
       local_fabric$v_from_masters_1_arready,
       local_fabric$v_from_masters_1_arvalid,
       local_fabric$v_from_masters_1_awlock,
       local_fabric$v_from_masters_1_awready,
       local_fabric$v_from_masters_1_awvalid,
       local_fabric$v_from_masters_1_bready,
       local_fabric$v_from_masters_1_bvalid,
       local_fabric$v_from_masters_1_rlast,
       local_fabric$v_from_masters_1_rready,
       local_fabric$v_from_masters_1_rvalid,
       local_fabric$v_from_masters_1_wlast,
       local_fabric$v_from_masters_1_wready,
       local_fabric$v_from_masters_1_wvalid,
       local_fabric$v_to_slaves_0_arlock,
       local_fabric$v_to_slaves_0_arready,
       local_fabric$v_to_slaves_0_arvalid,
       local_fabric$v_to_slaves_0_awlock,
       local_fabric$v_to_slaves_0_awready,
       local_fabric$v_to_slaves_0_awvalid,
       local_fabric$v_to_slaves_0_bready,
       local_fabric$v_to_slaves_0_bvalid,
       local_fabric$v_to_slaves_0_rlast,
       local_fabric$v_to_slaves_0_rready,
       local_fabric$v_to_slaves_0_rvalid,
       local_fabric$v_to_slaves_0_wlast,
       local_fabric$v_to_slaves_0_wready,
       local_fabric$v_to_slaves_0_wvalid,
       local_fabric$v_to_slaves_1_arlock,
       local_fabric$v_to_slaves_1_arready,
       local_fabric$v_to_slaves_1_arvalid,
       local_fabric$v_to_slaves_1_awlock,
       local_fabric$v_to_slaves_1_awready,
       local_fabric$v_to_slaves_1_awvalid,
       local_fabric$v_to_slaves_1_bready,
       local_fabric$v_to_slaves_1_bvalid,
       local_fabric$v_to_slaves_1_rlast,
       local_fabric$v_to_slaves_1_rready,
       local_fabric$v_to_slaves_1_rvalid,
       local_fabric$v_to_slaves_1_wlast,
       local_fabric$v_to_slaves_1_wready,
       local_fabric$v_to_slaves_1_wvalid,
       local_fabric$v_to_slaves_2_arlock,
       local_fabric$v_to_slaves_2_arready,
       local_fabric$v_to_slaves_2_arvalid,
       local_fabric$v_to_slaves_2_awlock,
       local_fabric$v_to_slaves_2_awready,
       local_fabric$v_to_slaves_2_awvalid,
       local_fabric$v_to_slaves_2_bready,
       local_fabric$v_to_slaves_2_bvalid,
       local_fabric$v_to_slaves_2_rlast,
       local_fabric$v_to_slaves_2_rready,
       local_fabric$v_to_slaves_2_rvalid,
       local_fabric$v_to_slaves_2_wlast,
       local_fabric$v_to_slaves_2_wready,
       local_fabric$v_to_slaves_2_wvalid,
       local_fabric$v_to_slaves_3_arlock,
       local_fabric$v_to_slaves_3_arready,
       local_fabric$v_to_slaves_3_arvalid,
       local_fabric$v_to_slaves_3_awlock,
       local_fabric$v_to_slaves_3_awready,
       local_fabric$v_to_slaves_3_awvalid,
       local_fabric$v_to_slaves_3_bready,
       local_fabric$v_to_slaves_3_bvalid,
       local_fabric$v_to_slaves_3_rlast,
       local_fabric$v_to_slaves_3_rready,
       local_fabric$v_to_slaves_3_rvalid,
       local_fabric$v_to_slaves_3_wlast,
       local_fabric$v_to_slaves_3_wready,
       local_fabric$v_to_slaves_3_wvalid;

  // ports of submodule plic
  wire [31 : 0] plic$axi4_slave_araddr,
		plic$axi4_slave_awaddr,
		plic$axi4_slave_rdata,
		plic$axi4_slave_wdata,
		plic$set_addr_map_addr_base,
		plic$set_addr_map_addr_lim;
  wire [7 : 0] plic$axi4_slave_arlen, plic$axi4_slave_awlen;
  wire [3 : 0] plic$axi4_slave_arcache,
	       plic$axi4_slave_arid,
	       plic$axi4_slave_arqos,
	       plic$axi4_slave_arregion,
	       plic$axi4_slave_awcache,
	       plic$axi4_slave_awid,
	       plic$axi4_slave_awqos,
	       plic$axi4_slave_awregion,
	       plic$axi4_slave_bid,
	       plic$axi4_slave_rid,
	       plic$axi4_slave_wstrb,
	       plic$set_verbosity_verbosity;
  wire [2 : 0] plic$axi4_slave_arprot,
	       plic$axi4_slave_arsize,
	       plic$axi4_slave_awprot,
	       plic$axi4_slave_awsize;
  wire [1 : 0] plic$axi4_slave_arburst,
	       plic$axi4_slave_awburst,
	       plic$axi4_slave_bresp,
	       plic$axi4_slave_rresp;
  wire plic$EN_server_reset_request_put,
       plic$EN_server_reset_response_get,
       plic$EN_set_addr_map,
       plic$EN_set_verbosity,
       plic$EN_show_PLIC_state,
       plic$RDY_server_reset_request_put,
       plic$RDY_server_reset_response_get,
       plic$axi4_slave_arlock,
       plic$axi4_slave_arready,
       plic$axi4_slave_arvalid,
       plic$axi4_slave_awlock,
       plic$axi4_slave_awready,
       plic$axi4_slave_awvalid,
       plic$axi4_slave_bready,
       plic$axi4_slave_bvalid,
       plic$axi4_slave_rlast,
       plic$axi4_slave_rready,
       plic$axi4_slave_rvalid,
       plic$axi4_slave_wlast,
       plic$axi4_slave_wready,
       plic$axi4_slave_wvalid,
       plic$v_sources_0_m_interrupt_req_set_not_clear,
       plic$v_sources_10_m_interrupt_req_set_not_clear,
       plic$v_sources_11_m_interrupt_req_set_not_clear,
       plic$v_sources_12_m_interrupt_req_set_not_clear,
       plic$v_sources_13_m_interrupt_req_set_not_clear,
       plic$v_sources_14_m_interrupt_req_set_not_clear,
       plic$v_sources_15_m_interrupt_req_set_not_clear,
       plic$v_sources_1_m_interrupt_req_set_not_clear,
       plic$v_sources_2_m_interrupt_req_set_not_clear,
       plic$v_sources_3_m_interrupt_req_set_not_clear,
       plic$v_sources_4_m_interrupt_req_set_not_clear,
       plic$v_sources_5_m_interrupt_req_set_not_clear,
       plic$v_sources_6_m_interrupt_req_set_not_clear,
       plic$v_sources_7_m_interrupt_req_set_not_clear,
       plic$v_sources_8_m_interrupt_req_set_not_clear,
       plic$v_sources_9_m_interrupt_req_set_not_clear,
       plic$v_targets_0_m_eip;

  // ports of submodule soc_map
  wire [31 : 0] soc_map$m_clint_addr_base,
		soc_map$m_clint_addr_lim,
		soc_map$m_is_IO_addr_addr,
		soc_map$m_is_clint_addr_addr,
		soc_map$m_is_dtcm_addr_addr,
		soc_map$m_is_itcm_addr_addr,
		soc_map$m_is_mem_addr_addr,
		soc_map$m_is_nmio_addr_addr,
		soc_map$m_is_tcm_addr_addr,
		soc_map$m_plic_addr_base,
		soc_map$m_plic_addr_lim;

  // rule scheduling signals
  wire CAN_FIRE_RL_dm_stub_burst_tl,
       CAN_FIRE_RL_dm_stub_csr_rd_rsp_rl,
       CAN_FIRE_RL_dm_stub_csr_wr_rsp_rl,
       CAN_FIRE_RL_dm_stub_gpr_rd_rsp_rl,
       CAN_FIRE_RL_dm_stub_gpr_wr_rsp_rl,
       CAN_FIRE_RL_dm_stub_read_req_rl,
       CAN_FIRE_RL_dm_stub_reset_rsp_rl,
       CAN_FIRE_RL_dm_stub_runhalt_rsp_rl,
       CAN_FIRE_RL_dm_stub_sbus_rsp_rl,
       CAN_FIRE_RL_dm_stub_sbus_wr_rsp_rl,
       CAN_FIRE_RL_dm_stub_write_req_rl,
       CAN_FIRE_RL_rl_cpu_hart0_reset_complete,
       CAN_FIRE_RL_rl_cpu_hart0_reset_from_soc_start,
       CAN_FIRE_RL_rl_rd_addr_channel,
       CAN_FIRE_RL_rl_rd_addr_channel_1,
       CAN_FIRE_RL_rl_rd_addr_channel_2,
       CAN_FIRE_RL_rl_rd_addr_channel_3,
       CAN_FIRE_RL_rl_rd_addr_channel_4,
       CAN_FIRE_RL_rl_rd_addr_channel_5,
       CAN_FIRE_RL_rl_rd_data_channel,
       CAN_FIRE_RL_rl_rd_data_channel_1,
       CAN_FIRE_RL_rl_rd_data_channel_2,
       CAN_FIRE_RL_rl_rd_data_channel_3,
       CAN_FIRE_RL_rl_rd_data_channel_4,
       CAN_FIRE_RL_rl_rd_data_channel_5,
       CAN_FIRE_RL_rl_relay_external_interrupts,
       CAN_FIRE_RL_rl_relay_sw_interrupts,
       CAN_FIRE_RL_rl_relay_timer_interrupts,
       CAN_FIRE_RL_rl_wr_addr_channel,
       CAN_FIRE_RL_rl_wr_addr_channel_1,
       CAN_FIRE_RL_rl_wr_addr_channel_2,
       CAN_FIRE_RL_rl_wr_addr_channel_3,
       CAN_FIRE_RL_rl_wr_addr_channel_4,
       CAN_FIRE_RL_rl_wr_addr_channel_5,
       CAN_FIRE_RL_rl_wr_data_channel,
       CAN_FIRE_RL_rl_wr_data_channel_1,
       CAN_FIRE_RL_rl_wr_data_channel_2,
       CAN_FIRE_RL_rl_wr_data_channel_3,
       CAN_FIRE_RL_rl_wr_data_channel_4,
       CAN_FIRE_RL_rl_wr_data_channel_5,
       CAN_FIRE_RL_rl_wr_response_channel,
       CAN_FIRE_RL_rl_wr_response_channel_1,
       CAN_FIRE_RL_rl_wr_response_channel_2,
       CAN_FIRE_RL_rl_wr_response_channel_3,
       CAN_FIRE_RL_rl_wr_response_channel_4,
       CAN_FIRE_RL_rl_wr_response_channel_5,
       CAN_FIRE_core_external_interrupt_sources_0_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_10_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_11_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_12_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_13_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_14_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_15_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_1_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_2_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_3_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_4_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_5_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_6_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_7_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_8_m_interrupt_req,
       CAN_FIRE_core_external_interrupt_sources_9_m_interrupt_req,
       CAN_FIRE_cpu_dmem_master_hrdata,
       CAN_FIRE_cpu_dmem_master_hready,
       CAN_FIRE_cpu_dmem_master_hresp,
       CAN_FIRE_cpu_reset_server_request_put,
       CAN_FIRE_cpu_reset_server_response_get,
       CAN_FIRE_debug_m_arvalid,
       CAN_FIRE_debug_m_awvalid,
       CAN_FIRE_debug_m_bready,
       CAN_FIRE_debug_m_rready,
       CAN_FIRE_debug_m_wvalid,
       CAN_FIRE_nmi_req,
       CAN_FIRE_set_verbosity,
       CAN_FIRE_set_watch_tohost,
       WILL_FIRE_RL_dm_stub_burst_tl,
       WILL_FIRE_RL_dm_stub_csr_rd_rsp_rl,
       WILL_FIRE_RL_dm_stub_csr_wr_rsp_rl,
       WILL_FIRE_RL_dm_stub_gpr_rd_rsp_rl,
       WILL_FIRE_RL_dm_stub_gpr_wr_rsp_rl,
       WILL_FIRE_RL_dm_stub_read_req_rl,
       WILL_FIRE_RL_dm_stub_reset_rsp_rl,
       WILL_FIRE_RL_dm_stub_runhalt_rsp_rl,
       WILL_FIRE_RL_dm_stub_sbus_rsp_rl,
       WILL_FIRE_RL_dm_stub_sbus_wr_rsp_rl,
       WILL_FIRE_RL_dm_stub_write_req_rl,
       WILL_FIRE_RL_rl_cpu_hart0_reset_complete,
       WILL_FIRE_RL_rl_cpu_hart0_reset_from_soc_start,
       WILL_FIRE_RL_rl_rd_addr_channel,
       WILL_FIRE_RL_rl_rd_addr_channel_1,
       WILL_FIRE_RL_rl_rd_addr_channel_2,
       WILL_FIRE_RL_rl_rd_addr_channel_3,
       WILL_FIRE_RL_rl_rd_addr_channel_4,
       WILL_FIRE_RL_rl_rd_addr_channel_5,
       WILL_FIRE_RL_rl_rd_data_channel,
       WILL_FIRE_RL_rl_rd_data_channel_1,
       WILL_FIRE_RL_rl_rd_data_channel_2,
       WILL_FIRE_RL_rl_rd_data_channel_3,
       WILL_FIRE_RL_rl_rd_data_channel_4,
       WILL_FIRE_RL_rl_rd_data_channel_5,
       WILL_FIRE_RL_rl_relay_external_interrupts,
       WILL_FIRE_RL_rl_relay_sw_interrupts,
       WILL_FIRE_RL_rl_relay_timer_interrupts,
       WILL_FIRE_RL_rl_wr_addr_channel,
       WILL_FIRE_RL_rl_wr_addr_channel_1,
       WILL_FIRE_RL_rl_wr_addr_channel_2,
       WILL_FIRE_RL_rl_wr_addr_channel_3,
       WILL_FIRE_RL_rl_wr_addr_channel_4,
       WILL_FIRE_RL_rl_wr_addr_channel_5,
       WILL_FIRE_RL_rl_wr_data_channel,
       WILL_FIRE_RL_rl_wr_data_channel_1,
       WILL_FIRE_RL_rl_wr_data_channel_2,
       WILL_FIRE_RL_rl_wr_data_channel_3,
       WILL_FIRE_RL_rl_wr_data_channel_4,
       WILL_FIRE_RL_rl_wr_data_channel_5,
       WILL_FIRE_RL_rl_wr_response_channel,
       WILL_FIRE_RL_rl_wr_response_channel_1,
       WILL_FIRE_RL_rl_wr_response_channel_2,
       WILL_FIRE_RL_rl_wr_response_channel_3,
       WILL_FIRE_RL_rl_wr_response_channel_4,
       WILL_FIRE_RL_rl_wr_response_channel_5,
       WILL_FIRE_core_external_interrupt_sources_0_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_10_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_11_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_12_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_13_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_14_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_15_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_1_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_2_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_3_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_4_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_5_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_6_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_7_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_8_m_interrupt_req,
       WILL_FIRE_core_external_interrupt_sources_9_m_interrupt_req,
       WILL_FIRE_cpu_dmem_master_hrdata,
       WILL_FIRE_cpu_dmem_master_hready,
       WILL_FIRE_cpu_dmem_master_hresp,
       WILL_FIRE_cpu_reset_server_request_put,
       WILL_FIRE_cpu_reset_server_response_get,
       WILL_FIRE_debug_m_arvalid,
       WILL_FIRE_debug_m_awvalid,
       WILL_FIRE_debug_m_bready,
       WILL_FIRE_debug_m_rready,
       WILL_FIRE_debug_m_wvalid,
       WILL_FIRE_nmi_req,
       WILL_FIRE_set_verbosity,
       WILL_FIRE_set_watch_tohost;

  // inputs to muxes for submodule ports
  wire [44 : 0] MUX_cpu$debug_hart_csr_mem_server_request_put_1__VAL_1,
		MUX_cpu$debug_hart_csr_mem_server_request_put_1__VAL_2;
  wire [38 : 0] MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_2,
		MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_3,
		MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_4,
		MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_5;
  wire [37 : 0] MUX_cpu$debug_hart_gpr_mem_server_request_put_1__VAL_1,
		MUX_cpu$debug_hart_gpr_mem_server_request_put_1__VAL_2;
  wire [5 : 0] MUX_dm_stub_input_Xactor_f_wr_resp$enq_1__VAL_2,
	       MUX_dm_stub_input_Xactor_f_wr_resp$enq_1__VAL_3;
  wire MUX_clint$server_reset_request_put_1__SEL_1,
       MUX_cpu$debug_hart_csr_mem_server_request_put_1__SEL_1,
       MUX_cpu$debug_hart_gpr_mem_server_request_put_1__SEL_1,
       MUX_dm_stub_rg_bursting$write_1__SEL_1;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h5325;
  reg [31 : 0] v__h5560;
  reg [31 : 0] v__h7559;
  reg [31 : 0] v__h7024;
  reg [31 : 0] v__h5319;
  reg [31 : 0] v__h5554;
  reg [31 : 0] v__h7018;
  reg [31 : 0] v__h7553;
  // synopsys translate_on

  // remaining internal signals
  reg IF_dm_stub_input_Xactor_f_rd_addr_first__4_BIT_ETC___d54,
      IF_dm_stub_input_Xactor_f_wr_addr_first__13_BI_ETC___d123;
  wire [31 : 0] x_rdata__h7611, x_rdata__h7661;
  wire clint_RDY_server_reset_response_get__6_AND_cpu_ETC___d22,
       local_fabric_RDY_reset_AND_cpu_RDY_debug_hart__ETC___d9;

  // action method cpu_reset_server_request_put
  assign RDY_cpu_reset_server_request_put = f_reset_reqs$FULL_N ;
  assign CAN_FIRE_cpu_reset_server_request_put = f_reset_reqs$FULL_N ;
  assign WILL_FIRE_cpu_reset_server_request_put =
	     EN_cpu_reset_server_request_put ;

  // actionvalue method cpu_reset_server_response_get
  assign cpu_reset_server_response_get = f_reset_rsps$D_OUT ;
  assign RDY_cpu_reset_server_response_get = f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_cpu_reset_server_response_get = f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_cpu_reset_server_response_get =
	     EN_cpu_reset_server_response_get ;

  // value method cpu_dmem_master_haddr
  assign cpu_dmem_master_HADDR = cpu$dmem_master_HADDR ;

  // value method cpu_dmem_master_hburst
  assign cpu_dmem_master_HBURST = cpu$dmem_master_HBURST ;

  // value method cpu_dmem_master_hmastlock
  assign cpu_dmem_master_HMASTLOCK = cpu$dmem_master_HMASTLOCK ;

  // value method cpu_dmem_master_hprot
  assign cpu_dmem_master_HPROT = cpu$dmem_master_HPROT ;

  // value method cpu_dmem_master_hsize
  assign cpu_dmem_master_HSIZE = cpu$dmem_master_HSIZE ;

  // value method cpu_dmem_master_htrans
  assign cpu_dmem_master_HTRANS = cpu$dmem_master_HTRANS ;

  // value method cpu_dmem_master_hwdata
  assign cpu_dmem_master_HWDATA = cpu$dmem_master_HWDATA ;

  // value method cpu_dmem_master_hwrite
  assign cpu_dmem_master_HWRITE = cpu$dmem_master_HWRITE ;

  // action method cpu_dmem_master_hrdata
  assign CAN_FIRE_cpu_dmem_master_hrdata = 1'd1 ;
  assign WILL_FIRE_cpu_dmem_master_hrdata = 1'd1 ;

  // action method cpu_dmem_master_hready
  assign CAN_FIRE_cpu_dmem_master_hready = 1'd1 ;
  assign WILL_FIRE_cpu_dmem_master_hready = 1'd1 ;

  // action method cpu_dmem_master_hresp
  assign CAN_FIRE_cpu_dmem_master_hresp = 1'd1 ;
  assign WILL_FIRE_cpu_dmem_master_hresp = 1'd1 ;

  // action method core_external_interrupt_sources_0_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_0_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_0_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_1_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_1_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_1_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_2_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_2_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_2_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_3_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_3_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_3_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_4_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_4_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_4_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_5_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_5_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_5_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_6_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_6_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_6_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_7_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_7_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_7_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_8_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_8_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_8_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_9_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_9_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_9_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_10_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_10_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_10_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_11_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_11_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_11_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_12_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_12_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_12_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_13_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_13_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_13_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_14_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_14_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_14_m_interrupt_req = 1'd1 ;

  // action method core_external_interrupt_sources_15_m_interrupt_req
  assign CAN_FIRE_core_external_interrupt_sources_15_m_interrupt_req = 1'd1 ;
  assign WILL_FIRE_core_external_interrupt_sources_15_m_interrupt_req = 1'd1 ;

  // action method nmi_req
  assign CAN_FIRE_nmi_req = 1'd1 ;
  assign WILL_FIRE_nmi_req = 1'd1 ;

  // action method debug_m_awvalid
  assign CAN_FIRE_debug_m_awvalid = 1'd1 ;
  assign WILL_FIRE_debug_m_awvalid = 1'd1 ;

  // value method debug_m_awready
  assign debug_awready = dm_stub_input_Xactor_f_wr_addr$FULL_N ;

  // action method debug_m_wvalid
  assign CAN_FIRE_debug_m_wvalid = 1'd1 ;
  assign WILL_FIRE_debug_m_wvalid = 1'd1 ;

  // value method debug_m_wready
  assign debug_wready = dm_stub_input_Xactor_f_wr_data$FULL_N ;

  // value method debug_m_bvalid
  assign debug_bvalid = dm_stub_input_Xactor_f_wr_resp$EMPTY_N ;

  // value method debug_m_bid
  assign debug_bid = dm_stub_input_Xactor_f_wr_resp$D_OUT[5:2] ;

  // value method debug_m_bresp
  assign debug_bresp = dm_stub_input_Xactor_f_wr_resp$D_OUT[1:0] ;

  // action method debug_m_bready
  assign CAN_FIRE_debug_m_bready = 1'd1 ;
  assign WILL_FIRE_debug_m_bready = 1'd1 ;

  // action method debug_m_arvalid
  assign CAN_FIRE_debug_m_arvalid = 1'd1 ;
  assign WILL_FIRE_debug_m_arvalid = 1'd1 ;

  // value method debug_m_arready
  assign debug_arready = dm_stub_input_Xactor_f_rd_addr$FULL_N ;

  // value method debug_m_rvalid
  assign debug_rvalid = dm_stub_input_Xactor_f_rd_data$EMPTY_N ;

  // value method debug_m_rid
  assign debug_rid = dm_stub_input_Xactor_f_rd_data$D_OUT[38:35] ;

  // value method debug_m_rdata
  assign debug_rdata = dm_stub_input_Xactor_f_rd_data$D_OUT[34:3] ;

  // value method debug_m_rresp
  assign debug_rresp = dm_stub_input_Xactor_f_rd_data$D_OUT[2:1] ;

  // value method debug_m_rlast
  assign debug_rlast = dm_stub_input_Xactor_f_rd_data$D_OUT[0] ;

  // action method debug_m_rready
  assign CAN_FIRE_debug_m_rready = 1'd1 ;
  assign WILL_FIRE_debug_m_rready = 1'd1 ;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method set_watch_tohost
  assign RDY_set_watch_tohost = 1'd1 ;
  assign CAN_FIRE_set_watch_tohost = 1'd1 ;
  assign WILL_FIRE_set_watch_tohost = EN_set_watch_tohost ;

  // value method mv_tohost_value
  assign mv_tohost_value = cpu$mv_tohost_value ;
  assign RDY_mv_tohost_value = 1'd1 ;

  // submodule clint
  mkNear_Mem_IO_AXI4 clint(.CLK(CLK),
			   .RST_N(RST_N),
			   .axi4_slave_araddr(clint$axi4_slave_araddr),
			   .axi4_slave_arburst(clint$axi4_slave_arburst),
			   .axi4_slave_arcache(clint$axi4_slave_arcache),
			   .axi4_slave_arid(clint$axi4_slave_arid),
			   .axi4_slave_arlen(clint$axi4_slave_arlen),
			   .axi4_slave_arlock(clint$axi4_slave_arlock),
			   .axi4_slave_arprot(clint$axi4_slave_arprot),
			   .axi4_slave_arqos(clint$axi4_slave_arqos),
			   .axi4_slave_arregion(clint$axi4_slave_arregion),
			   .axi4_slave_arsize(clint$axi4_slave_arsize),
			   .axi4_slave_arvalid(clint$axi4_slave_arvalid),
			   .axi4_slave_awaddr(clint$axi4_slave_awaddr),
			   .axi4_slave_awburst(clint$axi4_slave_awburst),
			   .axi4_slave_awcache(clint$axi4_slave_awcache),
			   .axi4_slave_awid(clint$axi4_slave_awid),
			   .axi4_slave_awlen(clint$axi4_slave_awlen),
			   .axi4_slave_awlock(clint$axi4_slave_awlock),
			   .axi4_slave_awprot(clint$axi4_slave_awprot),
			   .axi4_slave_awqos(clint$axi4_slave_awqos),
			   .axi4_slave_awregion(clint$axi4_slave_awregion),
			   .axi4_slave_awsize(clint$axi4_slave_awsize),
			   .axi4_slave_awvalid(clint$axi4_slave_awvalid),
			   .axi4_slave_bready(clint$axi4_slave_bready),
			   .axi4_slave_rready(clint$axi4_slave_rready),
			   .axi4_slave_wdata(clint$axi4_slave_wdata),
			   .axi4_slave_wlast(clint$axi4_slave_wlast),
			   .axi4_slave_wstrb(clint$axi4_slave_wstrb),
			   .axi4_slave_wvalid(clint$axi4_slave_wvalid),
			   .set_addr_map_addr_base(clint$set_addr_map_addr_base),
			   .set_addr_map_addr_lim(clint$set_addr_map_addr_lim),
			   .EN_server_reset_request_put(clint$EN_server_reset_request_put),
			   .EN_server_reset_response_get(clint$EN_server_reset_response_get),
			   .EN_set_addr_map(clint$EN_set_addr_map),
			   .EN_get_timer_interrupt_req_get(clint$EN_get_timer_interrupt_req_get),
			   .EN_get_sw_interrupt_req_get(clint$EN_get_sw_interrupt_req_get),
			   .RDY_server_reset_request_put(clint$RDY_server_reset_request_put),
			   .RDY_server_reset_response_get(clint$RDY_server_reset_response_get),
			   .RDY_set_addr_map(),
			   .axi4_slave_awready(clint$axi4_slave_awready),
			   .axi4_slave_wready(clint$axi4_slave_wready),
			   .axi4_slave_bvalid(clint$axi4_slave_bvalid),
			   .axi4_slave_bid(clint$axi4_slave_bid),
			   .axi4_slave_bresp(clint$axi4_slave_bresp),
			   .axi4_slave_arready(clint$axi4_slave_arready),
			   .axi4_slave_rvalid(clint$axi4_slave_rvalid),
			   .axi4_slave_rid(clint$axi4_slave_rid),
			   .axi4_slave_rdata(clint$axi4_slave_rdata),
			   .axi4_slave_rresp(clint$axi4_slave_rresp),
			   .axi4_slave_rlast(clint$axi4_slave_rlast),
			   .get_timer_interrupt_req_get(clint$get_timer_interrupt_req_get),
			   .RDY_get_timer_interrupt_req_get(clint$RDY_get_timer_interrupt_req_get),
			   .get_sw_interrupt_req_get(clint$get_sw_interrupt_req_get),
			   .RDY_get_sw_interrupt_req_get(clint$RDY_get_sw_interrupt_req_get));

  // submodule cpu
  mkCPU cpu(.CLK(CLK),
	    .RST_N(RST_N),
	    .debug_hart_csr_mem_server_request_put(cpu$debug_hart_csr_mem_server_request_put),
	    .debug_hart_gpr_mem_server_request_put(cpu$debug_hart_gpr_mem_server_request_put),
	    .debug_hart_put_other_req_put(cpu$debug_hart_put_other_req_put),
	    .debug_hart_reset_server_request_put(cpu$debug_hart_reset_server_request_put),
	    .debug_hart_server_run_halt_request_put(cpu$debug_hart_server_run_halt_request_put),
	    .dmem_dma_server_araddr(cpu$dmem_dma_server_araddr),
	    .dmem_dma_server_arburst(cpu$dmem_dma_server_arburst),
	    .dmem_dma_server_arcache(cpu$dmem_dma_server_arcache),
	    .dmem_dma_server_arid(cpu$dmem_dma_server_arid),
	    .dmem_dma_server_arlen(cpu$dmem_dma_server_arlen),
	    .dmem_dma_server_arlock(cpu$dmem_dma_server_arlock),
	    .dmem_dma_server_arprot(cpu$dmem_dma_server_arprot),
	    .dmem_dma_server_arqos(cpu$dmem_dma_server_arqos),
	    .dmem_dma_server_arregion(cpu$dmem_dma_server_arregion),
	    .dmem_dma_server_arsize(cpu$dmem_dma_server_arsize),
	    .dmem_dma_server_arvalid(cpu$dmem_dma_server_arvalid),
	    .dmem_dma_server_awaddr(cpu$dmem_dma_server_awaddr),
	    .dmem_dma_server_awburst(cpu$dmem_dma_server_awburst),
	    .dmem_dma_server_awcache(cpu$dmem_dma_server_awcache),
	    .dmem_dma_server_awid(cpu$dmem_dma_server_awid),
	    .dmem_dma_server_awlen(cpu$dmem_dma_server_awlen),
	    .dmem_dma_server_awlock(cpu$dmem_dma_server_awlock),
	    .dmem_dma_server_awprot(cpu$dmem_dma_server_awprot),
	    .dmem_dma_server_awqos(cpu$dmem_dma_server_awqos),
	    .dmem_dma_server_awregion(cpu$dmem_dma_server_awregion),
	    .dmem_dma_server_awsize(cpu$dmem_dma_server_awsize),
	    .dmem_dma_server_awvalid(cpu$dmem_dma_server_awvalid),
	    .dmem_dma_server_bready(cpu$dmem_dma_server_bready),
	    .dmem_dma_server_rready(cpu$dmem_dma_server_rready),
	    .dmem_dma_server_wdata(cpu$dmem_dma_server_wdata),
	    .dmem_dma_server_wlast(cpu$dmem_dma_server_wlast),
	    .dmem_dma_server_wstrb(cpu$dmem_dma_server_wstrb),
	    .dmem_dma_server_wvalid(cpu$dmem_dma_server_wvalid),
	    .dmem_master_HRDATA(cpu$dmem_master_HRDATA),
	    .dmem_master_HREADY(cpu$dmem_master_HREADY),
	    .dmem_master_HRESP(cpu$dmem_master_HRESP),
	    .imem_dma_server_araddr(cpu$imem_dma_server_araddr),
	    .imem_dma_server_arburst(cpu$imem_dma_server_arburst),
	    .imem_dma_server_arcache(cpu$imem_dma_server_arcache),
	    .imem_dma_server_arid(cpu$imem_dma_server_arid),
	    .imem_dma_server_arlen(cpu$imem_dma_server_arlen),
	    .imem_dma_server_arlock(cpu$imem_dma_server_arlock),
	    .imem_dma_server_arprot(cpu$imem_dma_server_arprot),
	    .imem_dma_server_arqos(cpu$imem_dma_server_arqos),
	    .imem_dma_server_arregion(cpu$imem_dma_server_arregion),
	    .imem_dma_server_arsize(cpu$imem_dma_server_arsize),
	    .imem_dma_server_arvalid(cpu$imem_dma_server_arvalid),
	    .imem_dma_server_awaddr(cpu$imem_dma_server_awaddr),
	    .imem_dma_server_awburst(cpu$imem_dma_server_awburst),
	    .imem_dma_server_awcache(cpu$imem_dma_server_awcache),
	    .imem_dma_server_awid(cpu$imem_dma_server_awid),
	    .imem_dma_server_awlen(cpu$imem_dma_server_awlen),
	    .imem_dma_server_awlock(cpu$imem_dma_server_awlock),
	    .imem_dma_server_awprot(cpu$imem_dma_server_awprot),
	    .imem_dma_server_awqos(cpu$imem_dma_server_awqos),
	    .imem_dma_server_awregion(cpu$imem_dma_server_awregion),
	    .imem_dma_server_awsize(cpu$imem_dma_server_awsize),
	    .imem_dma_server_awvalid(cpu$imem_dma_server_awvalid),
	    .imem_dma_server_bready(cpu$imem_dma_server_bready),
	    .imem_dma_server_rready(cpu$imem_dma_server_rready),
	    .imem_dma_server_wdata(cpu$imem_dma_server_wdata),
	    .imem_dma_server_wlast(cpu$imem_dma_server_wlast),
	    .imem_dma_server_wstrb(cpu$imem_dma_server_wstrb),
	    .imem_dma_server_wvalid(cpu$imem_dma_server_wvalid),
	    .m_external_interrupt_req_set_not_clear(cpu$m_external_interrupt_req_set_not_clear),
	    .nmi_req_set_not_clear(cpu$nmi_req_set_not_clear),
	    .nmio_master_arready(cpu$nmio_master_arready),
	    .nmio_master_awready(cpu$nmio_master_awready),
	    .nmio_master_bid(cpu$nmio_master_bid),
	    .nmio_master_bresp(cpu$nmio_master_bresp),
	    .nmio_master_bvalid(cpu$nmio_master_bvalid),
	    .nmio_master_rdata(cpu$nmio_master_rdata),
	    .nmio_master_rid(cpu$nmio_master_rid),
	    .nmio_master_rlast(cpu$nmio_master_rlast),
	    .nmio_master_rresp(cpu$nmio_master_rresp),
	    .nmio_master_rvalid(cpu$nmio_master_rvalid),
	    .nmio_master_wready(cpu$nmio_master_wready),
	    .s_external_interrupt_req_set_not_clear(cpu$s_external_interrupt_req_set_not_clear),
	    .set_verbosity_logdelay(cpu$set_verbosity_logdelay),
	    .set_verbosity_verbosity(cpu$set_verbosity_verbosity),
	    .set_watch_tohost_tohost_addr(cpu$set_watch_tohost_tohost_addr),
	    .set_watch_tohost_watch_tohost(cpu$set_watch_tohost_watch_tohost),
	    .software_interrupt_req_set_not_clear(cpu$software_interrupt_req_set_not_clear),
	    .timer_interrupt_req_set_not_clear(cpu$timer_interrupt_req_set_not_clear),
	    .EN_debug_hart_reset_server_request_put(cpu$EN_debug_hart_reset_server_request_put),
	    .EN_debug_hart_reset_server_response_get(cpu$EN_debug_hart_reset_server_response_get),
	    .EN_debug_hart_server_run_halt_request_put(cpu$EN_debug_hart_server_run_halt_request_put),
	    .EN_debug_hart_server_run_halt_response_get(cpu$EN_debug_hart_server_run_halt_response_get),
	    .EN_debug_hart_put_other_req_put(cpu$EN_debug_hart_put_other_req_put),
	    .EN_debug_hart_gpr_mem_server_request_put(cpu$EN_debug_hart_gpr_mem_server_request_put),
	    .EN_debug_hart_gpr_mem_server_response_get(cpu$EN_debug_hart_gpr_mem_server_response_get),
	    .EN_debug_hart_csr_mem_server_request_put(cpu$EN_debug_hart_csr_mem_server_request_put),
	    .EN_debug_hart_csr_mem_server_response_get(cpu$EN_debug_hart_csr_mem_server_response_get),
	    .EN_set_verbosity(cpu$EN_set_verbosity),
	    .EN_set_watch_tohost(cpu$EN_set_watch_tohost),
	    .nmio_master_awvalid(cpu$nmio_master_awvalid),
	    .nmio_master_awid(cpu$nmio_master_awid),
	    .nmio_master_awaddr(cpu$nmio_master_awaddr),
	    .nmio_master_awlen(cpu$nmio_master_awlen),
	    .nmio_master_awsize(cpu$nmio_master_awsize),
	    .nmio_master_awburst(cpu$nmio_master_awburst),
	    .nmio_master_awlock(cpu$nmio_master_awlock),
	    .nmio_master_awcache(cpu$nmio_master_awcache),
	    .nmio_master_awprot(cpu$nmio_master_awprot),
	    .nmio_master_awqos(cpu$nmio_master_awqos),
	    .nmio_master_awregion(cpu$nmio_master_awregion),
	    .nmio_master_wvalid(cpu$nmio_master_wvalid),
	    .nmio_master_wdata(cpu$nmio_master_wdata),
	    .nmio_master_wstrb(cpu$nmio_master_wstrb),
	    .nmio_master_wlast(cpu$nmio_master_wlast),
	    .nmio_master_bready(cpu$nmio_master_bready),
	    .nmio_master_arvalid(cpu$nmio_master_arvalid),
	    .nmio_master_arid(cpu$nmio_master_arid),
	    .nmio_master_araddr(cpu$nmio_master_araddr),
	    .nmio_master_arlen(cpu$nmio_master_arlen),
	    .nmio_master_arsize(cpu$nmio_master_arsize),
	    .nmio_master_arburst(cpu$nmio_master_arburst),
	    .nmio_master_arlock(cpu$nmio_master_arlock),
	    .nmio_master_arcache(cpu$nmio_master_arcache),
	    .nmio_master_arprot(cpu$nmio_master_arprot),
	    .nmio_master_arqos(cpu$nmio_master_arqos),
	    .nmio_master_arregion(cpu$nmio_master_arregion),
	    .nmio_master_rready(cpu$nmio_master_rready),
	    .dmem_master_HADDR(cpu$dmem_master_HADDR),
	    .dmem_master_HBURST(cpu$dmem_master_HBURST),
	    .dmem_master_HMASTLOCK(cpu$dmem_master_HMASTLOCK),
	    .dmem_master_HPROT(cpu$dmem_master_HPROT),
	    .dmem_master_HSIZE(cpu$dmem_master_HSIZE),
	    .dmem_master_HTRANS(cpu$dmem_master_HTRANS),
	    .dmem_master_HWDATA(cpu$dmem_master_HWDATA),
	    .dmem_master_HWRITE(cpu$dmem_master_HWRITE),
	    .imem_dma_server_awready(cpu$imem_dma_server_awready),
	    .imem_dma_server_wready(cpu$imem_dma_server_wready),
	    .imem_dma_server_bvalid(cpu$imem_dma_server_bvalid),
	    .imem_dma_server_bid(cpu$imem_dma_server_bid),
	    .imem_dma_server_bresp(cpu$imem_dma_server_bresp),
	    .imem_dma_server_arready(cpu$imem_dma_server_arready),
	    .imem_dma_server_rvalid(cpu$imem_dma_server_rvalid),
	    .imem_dma_server_rid(cpu$imem_dma_server_rid),
	    .imem_dma_server_rdata(cpu$imem_dma_server_rdata),
	    .imem_dma_server_rresp(cpu$imem_dma_server_rresp),
	    .imem_dma_server_rlast(cpu$imem_dma_server_rlast),
	    .dmem_dma_server_awready(cpu$dmem_dma_server_awready),
	    .dmem_dma_server_wready(cpu$dmem_dma_server_wready),
	    .dmem_dma_server_bvalid(cpu$dmem_dma_server_bvalid),
	    .dmem_dma_server_bid(cpu$dmem_dma_server_bid),
	    .dmem_dma_server_bresp(cpu$dmem_dma_server_bresp),
	    .dmem_dma_server_arready(cpu$dmem_dma_server_arready),
	    .dmem_dma_server_rvalid(cpu$dmem_dma_server_rvalid),
	    .dmem_dma_server_rid(cpu$dmem_dma_server_rid),
	    .dmem_dma_server_rdata(cpu$dmem_dma_server_rdata),
	    .dmem_dma_server_rresp(cpu$dmem_dma_server_rresp),
	    .dmem_dma_server_rlast(cpu$dmem_dma_server_rlast),
	    .RDY_debug_hart_reset_server_request_put(cpu$RDY_debug_hart_reset_server_request_put),
	    .debug_hart_reset_server_response_get(cpu$debug_hart_reset_server_response_get),
	    .RDY_debug_hart_reset_server_response_get(cpu$RDY_debug_hart_reset_server_response_get),
	    .RDY_debug_hart_server_run_halt_request_put(cpu$RDY_debug_hart_server_run_halt_request_put),
	    .debug_hart_server_run_halt_response_get(cpu$debug_hart_server_run_halt_response_get),
	    .RDY_debug_hart_server_run_halt_response_get(cpu$RDY_debug_hart_server_run_halt_response_get),
	    .RDY_debug_hart_put_other_req_put(),
	    .RDY_debug_hart_gpr_mem_server_request_put(cpu$RDY_debug_hart_gpr_mem_server_request_put),
	    .debug_hart_gpr_mem_server_response_get(cpu$debug_hart_gpr_mem_server_response_get),
	    .RDY_debug_hart_gpr_mem_server_response_get(cpu$RDY_debug_hart_gpr_mem_server_response_get),
	    .RDY_debug_hart_csr_mem_server_request_put(cpu$RDY_debug_hart_csr_mem_server_request_put),
	    .debug_hart_csr_mem_server_response_get(cpu$debug_hart_csr_mem_server_response_get),
	    .RDY_debug_hart_csr_mem_server_response_get(cpu$RDY_debug_hart_csr_mem_server_response_get),
	    .RDY_set_verbosity(),
	    .RDY_set_watch_tohost(),
	    .mv_tohost_value(cpu$mv_tohost_value),
	    .RDY_mv_tohost_value());

  // submodule dm_stub_input_Xactor_f_rd_addr
  FIFO2 #(.width(32'd65),
	  .guarded(1'd1)) dm_stub_input_Xactor_f_rd_addr(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(dm_stub_input_Xactor_f_rd_addr$D_IN),
							 .ENQ(dm_stub_input_Xactor_f_rd_addr$ENQ),
							 .DEQ(dm_stub_input_Xactor_f_rd_addr$DEQ),
							 .CLR(dm_stub_input_Xactor_f_rd_addr$CLR),
							 .D_OUT(dm_stub_input_Xactor_f_rd_addr$D_OUT),
							 .FULL_N(dm_stub_input_Xactor_f_rd_addr$FULL_N),
							 .EMPTY_N(dm_stub_input_Xactor_f_rd_addr$EMPTY_N));

  // submodule dm_stub_input_Xactor_f_rd_data
  FIFO2 #(.width(32'd39),
	  .guarded(1'd1)) dm_stub_input_Xactor_f_rd_data(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(dm_stub_input_Xactor_f_rd_data$D_IN),
							 .ENQ(dm_stub_input_Xactor_f_rd_data$ENQ),
							 .DEQ(dm_stub_input_Xactor_f_rd_data$DEQ),
							 .CLR(dm_stub_input_Xactor_f_rd_data$CLR),
							 .D_OUT(dm_stub_input_Xactor_f_rd_data$D_OUT),
							 .FULL_N(dm_stub_input_Xactor_f_rd_data$FULL_N),
							 .EMPTY_N(dm_stub_input_Xactor_f_rd_data$EMPTY_N));

  // submodule dm_stub_input_Xactor_f_wr_addr
  FIFO2 #(.width(32'd65),
	  .guarded(1'd1)) dm_stub_input_Xactor_f_wr_addr(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(dm_stub_input_Xactor_f_wr_addr$D_IN),
							 .ENQ(dm_stub_input_Xactor_f_wr_addr$ENQ),
							 .DEQ(dm_stub_input_Xactor_f_wr_addr$DEQ),
							 .CLR(dm_stub_input_Xactor_f_wr_addr$CLR),
							 .D_OUT(dm_stub_input_Xactor_f_wr_addr$D_OUT),
							 .FULL_N(dm_stub_input_Xactor_f_wr_addr$FULL_N),
							 .EMPTY_N(dm_stub_input_Xactor_f_wr_addr$EMPTY_N));

  // submodule dm_stub_input_Xactor_f_wr_data
  FIFO2 #(.width(32'd37),
	  .guarded(1'd1)) dm_stub_input_Xactor_f_wr_data(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(dm_stub_input_Xactor_f_wr_data$D_IN),
							 .ENQ(dm_stub_input_Xactor_f_wr_data$ENQ),
							 .DEQ(dm_stub_input_Xactor_f_wr_data$DEQ),
							 .CLR(dm_stub_input_Xactor_f_wr_data$CLR),
							 .D_OUT(dm_stub_input_Xactor_f_wr_data$D_OUT),
							 .FULL_N(dm_stub_input_Xactor_f_wr_data$FULL_N),
							 .EMPTY_N(dm_stub_input_Xactor_f_wr_data$EMPTY_N));

  // submodule dm_stub_input_Xactor_f_wr_resp
  FIFO2 #(.width(32'd6),
	  .guarded(1'd1)) dm_stub_input_Xactor_f_wr_resp(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(dm_stub_input_Xactor_f_wr_resp$D_IN),
							 .ENQ(dm_stub_input_Xactor_f_wr_resp$ENQ),
							 .DEQ(dm_stub_input_Xactor_f_wr_resp$DEQ),
							 .CLR(dm_stub_input_Xactor_f_wr_resp$CLR),
							 .D_OUT(dm_stub_input_Xactor_f_wr_resp$D_OUT),
							 .FULL_N(dm_stub_input_Xactor_f_wr_resp$FULL_N),
							 .EMPTY_N(dm_stub_input_Xactor_f_wr_resp$EMPTY_N));

  // submodule dm_stub_sbus_master_f_rd_addr
  FIFO2 #(.width(32'd65),
	  .guarded(1'd1)) dm_stub_sbus_master_f_rd_addr(.RST(RST_N),
							.CLK(CLK),
							.D_IN(dm_stub_sbus_master_f_rd_addr$D_IN),
							.ENQ(dm_stub_sbus_master_f_rd_addr$ENQ),
							.DEQ(dm_stub_sbus_master_f_rd_addr$DEQ),
							.CLR(dm_stub_sbus_master_f_rd_addr$CLR),
							.D_OUT(dm_stub_sbus_master_f_rd_addr$D_OUT),
							.FULL_N(dm_stub_sbus_master_f_rd_addr$FULL_N),
							.EMPTY_N(dm_stub_sbus_master_f_rd_addr$EMPTY_N));

  // submodule dm_stub_sbus_master_f_rd_data
  FIFO2 #(.width(32'd39),
	  .guarded(1'd1)) dm_stub_sbus_master_f_rd_data(.RST(RST_N),
							.CLK(CLK),
							.D_IN(dm_stub_sbus_master_f_rd_data$D_IN),
							.ENQ(dm_stub_sbus_master_f_rd_data$ENQ),
							.DEQ(dm_stub_sbus_master_f_rd_data$DEQ),
							.CLR(dm_stub_sbus_master_f_rd_data$CLR),
							.D_OUT(dm_stub_sbus_master_f_rd_data$D_OUT),
							.FULL_N(dm_stub_sbus_master_f_rd_data$FULL_N),
							.EMPTY_N(dm_stub_sbus_master_f_rd_data$EMPTY_N));

  // submodule dm_stub_sbus_master_f_wr_addr
  FIFO2 #(.width(32'd65),
	  .guarded(1'd1)) dm_stub_sbus_master_f_wr_addr(.RST(RST_N),
							.CLK(CLK),
							.D_IN(dm_stub_sbus_master_f_wr_addr$D_IN),
							.ENQ(dm_stub_sbus_master_f_wr_addr$ENQ),
							.DEQ(dm_stub_sbus_master_f_wr_addr$DEQ),
							.CLR(dm_stub_sbus_master_f_wr_addr$CLR),
							.D_OUT(dm_stub_sbus_master_f_wr_addr$D_OUT),
							.FULL_N(dm_stub_sbus_master_f_wr_addr$FULL_N),
							.EMPTY_N(dm_stub_sbus_master_f_wr_addr$EMPTY_N));

  // submodule dm_stub_sbus_master_f_wr_data
  FIFO2 #(.width(32'd37),
	  .guarded(1'd1)) dm_stub_sbus_master_f_wr_data(.RST(RST_N),
							.CLK(CLK),
							.D_IN(dm_stub_sbus_master_f_wr_data$D_IN),
							.ENQ(dm_stub_sbus_master_f_wr_data$ENQ),
							.DEQ(dm_stub_sbus_master_f_wr_data$DEQ),
							.CLR(dm_stub_sbus_master_f_wr_data$CLR),
							.D_OUT(dm_stub_sbus_master_f_wr_data$D_OUT),
							.FULL_N(dm_stub_sbus_master_f_wr_data$FULL_N),
							.EMPTY_N(dm_stub_sbus_master_f_wr_data$EMPTY_N));

  // submodule dm_stub_sbus_master_f_wr_resp
  FIFO2 #(.width(32'd6),
	  .guarded(1'd1)) dm_stub_sbus_master_f_wr_resp(.RST(RST_N),
							.CLK(CLK),
							.D_IN(dm_stub_sbus_master_f_wr_resp$D_IN),
							.ENQ(dm_stub_sbus_master_f_wr_resp$ENQ),
							.DEQ(dm_stub_sbus_master_f_wr_resp$DEQ),
							.CLR(dm_stub_sbus_master_f_wr_resp$CLR),
							.D_OUT(dm_stub_sbus_master_f_wr_resp$D_OUT),
							.FULL_N(dm_stub_sbus_master_f_wr_resp$FULL_N),
							.EMPTY_N(dm_stub_sbus_master_f_wr_resp$EMPTY_N));

  // submodule f_reset_reqs
  FIFO2 #(.width(32'd1), .guarded(1'd1)) f_reset_reqs(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(f_reset_reqs$D_IN),
						      .ENQ(f_reset_reqs$ENQ),
						      .DEQ(f_reset_reqs$DEQ),
						      .CLR(f_reset_reqs$CLR),
						      .D_OUT(f_reset_reqs$D_OUT),
						      .FULL_N(f_reset_reqs$FULL_N),
						      .EMPTY_N(f_reset_reqs$EMPTY_N));

  // submodule f_reset_requestor
  FIFO2 #(.width(32'd1), .guarded(1'd1)) f_reset_requestor(.RST(RST_N),
							   .CLK(CLK),
							   .D_IN(f_reset_requestor$D_IN),
							   .ENQ(f_reset_requestor$ENQ),
							   .DEQ(f_reset_requestor$DEQ),
							   .CLR(f_reset_requestor$CLR),
							   .D_OUT(f_reset_requestor$D_OUT),
							   .FULL_N(f_reset_requestor$FULL_N),
							   .EMPTY_N(f_reset_requestor$EMPTY_N));

  // submodule f_reset_rsps
  FIFO2 #(.width(32'd1), .guarded(1'd1)) f_reset_rsps(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(f_reset_rsps$D_IN),
						      .ENQ(f_reset_rsps$ENQ),
						      .DEQ(f_reset_rsps$DEQ),
						      .CLR(f_reset_rsps$CLR),
						      .D_OUT(f_reset_rsps$D_OUT),
						      .FULL_N(f_reset_rsps$FULL_N),
						      .EMPTY_N(f_reset_rsps$EMPTY_N));

  // submodule local_fabric
  mkLocal_Fabric local_fabric(.CLK(CLK),
			      .RST_N(RST_N),
			      .set_verbosity_verbosity(local_fabric$set_verbosity_verbosity),
			      .v_from_masters_0_araddr(local_fabric$v_from_masters_0_araddr),
			      .v_from_masters_0_arburst(local_fabric$v_from_masters_0_arburst),
			      .v_from_masters_0_arcache(local_fabric$v_from_masters_0_arcache),
			      .v_from_masters_0_arid(local_fabric$v_from_masters_0_arid),
			      .v_from_masters_0_arlen(local_fabric$v_from_masters_0_arlen),
			      .v_from_masters_0_arlock(local_fabric$v_from_masters_0_arlock),
			      .v_from_masters_0_arprot(local_fabric$v_from_masters_0_arprot),
			      .v_from_masters_0_arqos(local_fabric$v_from_masters_0_arqos),
			      .v_from_masters_0_arregion(local_fabric$v_from_masters_0_arregion),
			      .v_from_masters_0_arsize(local_fabric$v_from_masters_0_arsize),
			      .v_from_masters_0_arvalid(local_fabric$v_from_masters_0_arvalid),
			      .v_from_masters_0_awaddr(local_fabric$v_from_masters_0_awaddr),
			      .v_from_masters_0_awburst(local_fabric$v_from_masters_0_awburst),
			      .v_from_masters_0_awcache(local_fabric$v_from_masters_0_awcache),
			      .v_from_masters_0_awid(local_fabric$v_from_masters_0_awid),
			      .v_from_masters_0_awlen(local_fabric$v_from_masters_0_awlen),
			      .v_from_masters_0_awlock(local_fabric$v_from_masters_0_awlock),
			      .v_from_masters_0_awprot(local_fabric$v_from_masters_0_awprot),
			      .v_from_masters_0_awqos(local_fabric$v_from_masters_0_awqos),
			      .v_from_masters_0_awregion(local_fabric$v_from_masters_0_awregion),
			      .v_from_masters_0_awsize(local_fabric$v_from_masters_0_awsize),
			      .v_from_masters_0_awvalid(local_fabric$v_from_masters_0_awvalid),
			      .v_from_masters_0_bready(local_fabric$v_from_masters_0_bready),
			      .v_from_masters_0_rready(local_fabric$v_from_masters_0_rready),
			      .v_from_masters_0_wdata(local_fabric$v_from_masters_0_wdata),
			      .v_from_masters_0_wlast(local_fabric$v_from_masters_0_wlast),
			      .v_from_masters_0_wstrb(local_fabric$v_from_masters_0_wstrb),
			      .v_from_masters_0_wvalid(local_fabric$v_from_masters_0_wvalid),
			      .v_from_masters_1_araddr(local_fabric$v_from_masters_1_araddr),
			      .v_from_masters_1_arburst(local_fabric$v_from_masters_1_arburst),
			      .v_from_masters_1_arcache(local_fabric$v_from_masters_1_arcache),
			      .v_from_masters_1_arid(local_fabric$v_from_masters_1_arid),
			      .v_from_masters_1_arlen(local_fabric$v_from_masters_1_arlen),
			      .v_from_masters_1_arlock(local_fabric$v_from_masters_1_arlock),
			      .v_from_masters_1_arprot(local_fabric$v_from_masters_1_arprot),
			      .v_from_masters_1_arqos(local_fabric$v_from_masters_1_arqos),
			      .v_from_masters_1_arregion(local_fabric$v_from_masters_1_arregion),
			      .v_from_masters_1_arsize(local_fabric$v_from_masters_1_arsize),
			      .v_from_masters_1_arvalid(local_fabric$v_from_masters_1_arvalid),
			      .v_from_masters_1_awaddr(local_fabric$v_from_masters_1_awaddr),
			      .v_from_masters_1_awburst(local_fabric$v_from_masters_1_awburst),
			      .v_from_masters_1_awcache(local_fabric$v_from_masters_1_awcache),
			      .v_from_masters_1_awid(local_fabric$v_from_masters_1_awid),
			      .v_from_masters_1_awlen(local_fabric$v_from_masters_1_awlen),
			      .v_from_masters_1_awlock(local_fabric$v_from_masters_1_awlock),
			      .v_from_masters_1_awprot(local_fabric$v_from_masters_1_awprot),
			      .v_from_masters_1_awqos(local_fabric$v_from_masters_1_awqos),
			      .v_from_masters_1_awregion(local_fabric$v_from_masters_1_awregion),
			      .v_from_masters_1_awsize(local_fabric$v_from_masters_1_awsize),
			      .v_from_masters_1_awvalid(local_fabric$v_from_masters_1_awvalid),
			      .v_from_masters_1_bready(local_fabric$v_from_masters_1_bready),
			      .v_from_masters_1_rready(local_fabric$v_from_masters_1_rready),
			      .v_from_masters_1_wdata(local_fabric$v_from_masters_1_wdata),
			      .v_from_masters_1_wlast(local_fabric$v_from_masters_1_wlast),
			      .v_from_masters_1_wstrb(local_fabric$v_from_masters_1_wstrb),
			      .v_from_masters_1_wvalid(local_fabric$v_from_masters_1_wvalid),
			      .v_to_slaves_0_arready(local_fabric$v_to_slaves_0_arready),
			      .v_to_slaves_0_awready(local_fabric$v_to_slaves_0_awready),
			      .v_to_slaves_0_bid(local_fabric$v_to_slaves_0_bid),
			      .v_to_slaves_0_bresp(local_fabric$v_to_slaves_0_bresp),
			      .v_to_slaves_0_bvalid(local_fabric$v_to_slaves_0_bvalid),
			      .v_to_slaves_0_rdata(local_fabric$v_to_slaves_0_rdata),
			      .v_to_slaves_0_rid(local_fabric$v_to_slaves_0_rid),
			      .v_to_slaves_0_rlast(local_fabric$v_to_slaves_0_rlast),
			      .v_to_slaves_0_rresp(local_fabric$v_to_slaves_0_rresp),
			      .v_to_slaves_0_rvalid(local_fabric$v_to_slaves_0_rvalid),
			      .v_to_slaves_0_wready(local_fabric$v_to_slaves_0_wready),
			      .v_to_slaves_1_arready(local_fabric$v_to_slaves_1_arready),
			      .v_to_slaves_1_awready(local_fabric$v_to_slaves_1_awready),
			      .v_to_slaves_1_bid(local_fabric$v_to_slaves_1_bid),
			      .v_to_slaves_1_bresp(local_fabric$v_to_slaves_1_bresp),
			      .v_to_slaves_1_bvalid(local_fabric$v_to_slaves_1_bvalid),
			      .v_to_slaves_1_rdata(local_fabric$v_to_slaves_1_rdata),
			      .v_to_slaves_1_rid(local_fabric$v_to_slaves_1_rid),
			      .v_to_slaves_1_rlast(local_fabric$v_to_slaves_1_rlast),
			      .v_to_slaves_1_rresp(local_fabric$v_to_slaves_1_rresp),
			      .v_to_slaves_1_rvalid(local_fabric$v_to_slaves_1_rvalid),
			      .v_to_slaves_1_wready(local_fabric$v_to_slaves_1_wready),
			      .v_to_slaves_2_arready(local_fabric$v_to_slaves_2_arready),
			      .v_to_slaves_2_awready(local_fabric$v_to_slaves_2_awready),
			      .v_to_slaves_2_bid(local_fabric$v_to_slaves_2_bid),
			      .v_to_slaves_2_bresp(local_fabric$v_to_slaves_2_bresp),
			      .v_to_slaves_2_bvalid(local_fabric$v_to_slaves_2_bvalid),
			      .v_to_slaves_2_rdata(local_fabric$v_to_slaves_2_rdata),
			      .v_to_slaves_2_rid(local_fabric$v_to_slaves_2_rid),
			      .v_to_slaves_2_rlast(local_fabric$v_to_slaves_2_rlast),
			      .v_to_slaves_2_rresp(local_fabric$v_to_slaves_2_rresp),
			      .v_to_slaves_2_rvalid(local_fabric$v_to_slaves_2_rvalid),
			      .v_to_slaves_2_wready(local_fabric$v_to_slaves_2_wready),
			      .v_to_slaves_3_arready(local_fabric$v_to_slaves_3_arready),
			      .v_to_slaves_3_awready(local_fabric$v_to_slaves_3_awready),
			      .v_to_slaves_3_bid(local_fabric$v_to_slaves_3_bid),
			      .v_to_slaves_3_bresp(local_fabric$v_to_slaves_3_bresp),
			      .v_to_slaves_3_bvalid(local_fabric$v_to_slaves_3_bvalid),
			      .v_to_slaves_3_rdata(local_fabric$v_to_slaves_3_rdata),
			      .v_to_slaves_3_rid(local_fabric$v_to_slaves_3_rid),
			      .v_to_slaves_3_rlast(local_fabric$v_to_slaves_3_rlast),
			      .v_to_slaves_3_rresp(local_fabric$v_to_slaves_3_rresp),
			      .v_to_slaves_3_rvalid(local_fabric$v_to_slaves_3_rvalid),
			      .v_to_slaves_3_wready(local_fabric$v_to_slaves_3_wready),
			      .EN_reset(local_fabric$EN_reset),
			      .EN_set_verbosity(local_fabric$EN_set_verbosity),
			      .RDY_reset(local_fabric$RDY_reset),
			      .RDY_set_verbosity(),
			      .v_from_masters_0_awready(local_fabric$v_from_masters_0_awready),
			      .v_from_masters_0_wready(local_fabric$v_from_masters_0_wready),
			      .v_from_masters_0_bvalid(local_fabric$v_from_masters_0_bvalid),
			      .v_from_masters_0_bid(local_fabric$v_from_masters_0_bid),
			      .v_from_masters_0_bresp(local_fabric$v_from_masters_0_bresp),
			      .v_from_masters_0_arready(local_fabric$v_from_masters_0_arready),
			      .v_from_masters_0_rvalid(local_fabric$v_from_masters_0_rvalid),
			      .v_from_masters_0_rid(local_fabric$v_from_masters_0_rid),
			      .v_from_masters_0_rdata(local_fabric$v_from_masters_0_rdata),
			      .v_from_masters_0_rresp(local_fabric$v_from_masters_0_rresp),
			      .v_from_masters_0_rlast(local_fabric$v_from_masters_0_rlast),
			      .v_from_masters_1_awready(local_fabric$v_from_masters_1_awready),
			      .v_from_masters_1_wready(local_fabric$v_from_masters_1_wready),
			      .v_from_masters_1_bvalid(local_fabric$v_from_masters_1_bvalid),
			      .v_from_masters_1_bid(local_fabric$v_from_masters_1_bid),
			      .v_from_masters_1_bresp(local_fabric$v_from_masters_1_bresp),
			      .v_from_masters_1_arready(local_fabric$v_from_masters_1_arready),
			      .v_from_masters_1_rvalid(local_fabric$v_from_masters_1_rvalid),
			      .v_from_masters_1_rid(local_fabric$v_from_masters_1_rid),
			      .v_from_masters_1_rdata(local_fabric$v_from_masters_1_rdata),
			      .v_from_masters_1_rresp(local_fabric$v_from_masters_1_rresp),
			      .v_from_masters_1_rlast(local_fabric$v_from_masters_1_rlast),
			      .v_to_slaves_0_awvalid(local_fabric$v_to_slaves_0_awvalid),
			      .v_to_slaves_0_awid(local_fabric$v_to_slaves_0_awid),
			      .v_to_slaves_0_awaddr(local_fabric$v_to_slaves_0_awaddr),
			      .v_to_slaves_0_awlen(local_fabric$v_to_slaves_0_awlen),
			      .v_to_slaves_0_awsize(local_fabric$v_to_slaves_0_awsize),
			      .v_to_slaves_0_awburst(local_fabric$v_to_slaves_0_awburst),
			      .v_to_slaves_0_awlock(local_fabric$v_to_slaves_0_awlock),
			      .v_to_slaves_0_awcache(local_fabric$v_to_slaves_0_awcache),
			      .v_to_slaves_0_awprot(local_fabric$v_to_slaves_0_awprot),
			      .v_to_slaves_0_awqos(local_fabric$v_to_slaves_0_awqos),
			      .v_to_slaves_0_awregion(local_fabric$v_to_slaves_0_awregion),
			      .v_to_slaves_0_wvalid(local_fabric$v_to_slaves_0_wvalid),
			      .v_to_slaves_0_wdata(local_fabric$v_to_slaves_0_wdata),
			      .v_to_slaves_0_wstrb(local_fabric$v_to_slaves_0_wstrb),
			      .v_to_slaves_0_wlast(local_fabric$v_to_slaves_0_wlast),
			      .v_to_slaves_0_bready(local_fabric$v_to_slaves_0_bready),
			      .v_to_slaves_0_arvalid(local_fabric$v_to_slaves_0_arvalid),
			      .v_to_slaves_0_arid(local_fabric$v_to_slaves_0_arid),
			      .v_to_slaves_0_araddr(local_fabric$v_to_slaves_0_araddr),
			      .v_to_slaves_0_arlen(local_fabric$v_to_slaves_0_arlen),
			      .v_to_slaves_0_arsize(local_fabric$v_to_slaves_0_arsize),
			      .v_to_slaves_0_arburst(local_fabric$v_to_slaves_0_arburst),
			      .v_to_slaves_0_arlock(local_fabric$v_to_slaves_0_arlock),
			      .v_to_slaves_0_arcache(local_fabric$v_to_slaves_0_arcache),
			      .v_to_slaves_0_arprot(local_fabric$v_to_slaves_0_arprot),
			      .v_to_slaves_0_arqos(local_fabric$v_to_slaves_0_arqos),
			      .v_to_slaves_0_arregion(local_fabric$v_to_slaves_0_arregion),
			      .v_to_slaves_0_rready(local_fabric$v_to_slaves_0_rready),
			      .v_to_slaves_1_awvalid(local_fabric$v_to_slaves_1_awvalid),
			      .v_to_slaves_1_awid(local_fabric$v_to_slaves_1_awid),
			      .v_to_slaves_1_awaddr(local_fabric$v_to_slaves_1_awaddr),
			      .v_to_slaves_1_awlen(local_fabric$v_to_slaves_1_awlen),
			      .v_to_slaves_1_awsize(local_fabric$v_to_slaves_1_awsize),
			      .v_to_slaves_1_awburst(local_fabric$v_to_slaves_1_awburst),
			      .v_to_slaves_1_awlock(local_fabric$v_to_slaves_1_awlock),
			      .v_to_slaves_1_awcache(local_fabric$v_to_slaves_1_awcache),
			      .v_to_slaves_1_awprot(local_fabric$v_to_slaves_1_awprot),
			      .v_to_slaves_1_awqos(local_fabric$v_to_slaves_1_awqos),
			      .v_to_slaves_1_awregion(local_fabric$v_to_slaves_1_awregion),
			      .v_to_slaves_1_wvalid(local_fabric$v_to_slaves_1_wvalid),
			      .v_to_slaves_1_wdata(local_fabric$v_to_slaves_1_wdata),
			      .v_to_slaves_1_wstrb(local_fabric$v_to_slaves_1_wstrb),
			      .v_to_slaves_1_wlast(local_fabric$v_to_slaves_1_wlast),
			      .v_to_slaves_1_bready(local_fabric$v_to_slaves_1_bready),
			      .v_to_slaves_1_arvalid(local_fabric$v_to_slaves_1_arvalid),
			      .v_to_slaves_1_arid(local_fabric$v_to_slaves_1_arid),
			      .v_to_slaves_1_araddr(local_fabric$v_to_slaves_1_araddr),
			      .v_to_slaves_1_arlen(local_fabric$v_to_slaves_1_arlen),
			      .v_to_slaves_1_arsize(local_fabric$v_to_slaves_1_arsize),
			      .v_to_slaves_1_arburst(local_fabric$v_to_slaves_1_arburst),
			      .v_to_slaves_1_arlock(local_fabric$v_to_slaves_1_arlock),
			      .v_to_slaves_1_arcache(local_fabric$v_to_slaves_1_arcache),
			      .v_to_slaves_1_arprot(local_fabric$v_to_slaves_1_arprot),
			      .v_to_slaves_1_arqos(local_fabric$v_to_slaves_1_arqos),
			      .v_to_slaves_1_arregion(local_fabric$v_to_slaves_1_arregion),
			      .v_to_slaves_1_rready(local_fabric$v_to_slaves_1_rready),
			      .v_to_slaves_2_awvalid(local_fabric$v_to_slaves_2_awvalid),
			      .v_to_slaves_2_awid(local_fabric$v_to_slaves_2_awid),
			      .v_to_slaves_2_awaddr(local_fabric$v_to_slaves_2_awaddr),
			      .v_to_slaves_2_awlen(local_fabric$v_to_slaves_2_awlen),
			      .v_to_slaves_2_awsize(local_fabric$v_to_slaves_2_awsize),
			      .v_to_slaves_2_awburst(local_fabric$v_to_slaves_2_awburst),
			      .v_to_slaves_2_awlock(local_fabric$v_to_slaves_2_awlock),
			      .v_to_slaves_2_awcache(local_fabric$v_to_slaves_2_awcache),
			      .v_to_slaves_2_awprot(local_fabric$v_to_slaves_2_awprot),
			      .v_to_slaves_2_awqos(local_fabric$v_to_slaves_2_awqos),
			      .v_to_slaves_2_awregion(local_fabric$v_to_slaves_2_awregion),
			      .v_to_slaves_2_wvalid(local_fabric$v_to_slaves_2_wvalid),
			      .v_to_slaves_2_wdata(local_fabric$v_to_slaves_2_wdata),
			      .v_to_slaves_2_wstrb(local_fabric$v_to_slaves_2_wstrb),
			      .v_to_slaves_2_wlast(local_fabric$v_to_slaves_2_wlast),
			      .v_to_slaves_2_bready(local_fabric$v_to_slaves_2_bready),
			      .v_to_slaves_2_arvalid(local_fabric$v_to_slaves_2_arvalid),
			      .v_to_slaves_2_arid(local_fabric$v_to_slaves_2_arid),
			      .v_to_slaves_2_araddr(local_fabric$v_to_slaves_2_araddr),
			      .v_to_slaves_2_arlen(local_fabric$v_to_slaves_2_arlen),
			      .v_to_slaves_2_arsize(local_fabric$v_to_slaves_2_arsize),
			      .v_to_slaves_2_arburst(local_fabric$v_to_slaves_2_arburst),
			      .v_to_slaves_2_arlock(local_fabric$v_to_slaves_2_arlock),
			      .v_to_slaves_2_arcache(local_fabric$v_to_slaves_2_arcache),
			      .v_to_slaves_2_arprot(local_fabric$v_to_slaves_2_arprot),
			      .v_to_slaves_2_arqos(local_fabric$v_to_slaves_2_arqos),
			      .v_to_slaves_2_arregion(local_fabric$v_to_slaves_2_arregion),
			      .v_to_slaves_2_rready(local_fabric$v_to_slaves_2_rready),
			      .v_to_slaves_3_awvalid(local_fabric$v_to_slaves_3_awvalid),
			      .v_to_slaves_3_awid(local_fabric$v_to_slaves_3_awid),
			      .v_to_slaves_3_awaddr(local_fabric$v_to_slaves_3_awaddr),
			      .v_to_slaves_3_awlen(local_fabric$v_to_slaves_3_awlen),
			      .v_to_slaves_3_awsize(local_fabric$v_to_slaves_3_awsize),
			      .v_to_slaves_3_awburst(local_fabric$v_to_slaves_3_awburst),
			      .v_to_slaves_3_awlock(local_fabric$v_to_slaves_3_awlock),
			      .v_to_slaves_3_awcache(local_fabric$v_to_slaves_3_awcache),
			      .v_to_slaves_3_awprot(local_fabric$v_to_slaves_3_awprot),
			      .v_to_slaves_3_awqos(local_fabric$v_to_slaves_3_awqos),
			      .v_to_slaves_3_awregion(local_fabric$v_to_slaves_3_awregion),
			      .v_to_slaves_3_wvalid(local_fabric$v_to_slaves_3_wvalid),
			      .v_to_slaves_3_wdata(local_fabric$v_to_slaves_3_wdata),
			      .v_to_slaves_3_wstrb(local_fabric$v_to_slaves_3_wstrb),
			      .v_to_slaves_3_wlast(local_fabric$v_to_slaves_3_wlast),
			      .v_to_slaves_3_bready(local_fabric$v_to_slaves_3_bready),
			      .v_to_slaves_3_arvalid(local_fabric$v_to_slaves_3_arvalid),
			      .v_to_slaves_3_arid(local_fabric$v_to_slaves_3_arid),
			      .v_to_slaves_3_araddr(local_fabric$v_to_slaves_3_araddr),
			      .v_to_slaves_3_arlen(local_fabric$v_to_slaves_3_arlen),
			      .v_to_slaves_3_arsize(local_fabric$v_to_slaves_3_arsize),
			      .v_to_slaves_3_arburst(local_fabric$v_to_slaves_3_arburst),
			      .v_to_slaves_3_arlock(local_fabric$v_to_slaves_3_arlock),
			      .v_to_slaves_3_arcache(local_fabric$v_to_slaves_3_arcache),
			      .v_to_slaves_3_arprot(local_fabric$v_to_slaves_3_arprot),
			      .v_to_slaves_3_arqos(local_fabric$v_to_slaves_3_arqos),
			      .v_to_slaves_3_arregion(local_fabric$v_to_slaves_3_arregion),
			      .v_to_slaves_3_rready(local_fabric$v_to_slaves_3_rready));

  // submodule plic
  mkPLIC_16_1_7 plic(.CLK(CLK),
		     .RST_N(RST_N),
		     .axi4_slave_araddr(plic$axi4_slave_araddr),
		     .axi4_slave_arburst(plic$axi4_slave_arburst),
		     .axi4_slave_arcache(plic$axi4_slave_arcache),
		     .axi4_slave_arid(plic$axi4_slave_arid),
		     .axi4_slave_arlen(plic$axi4_slave_arlen),
		     .axi4_slave_arlock(plic$axi4_slave_arlock),
		     .axi4_slave_arprot(plic$axi4_slave_arprot),
		     .axi4_slave_arqos(plic$axi4_slave_arqos),
		     .axi4_slave_arregion(plic$axi4_slave_arregion),
		     .axi4_slave_arsize(plic$axi4_slave_arsize),
		     .axi4_slave_arvalid(plic$axi4_slave_arvalid),
		     .axi4_slave_awaddr(plic$axi4_slave_awaddr),
		     .axi4_slave_awburst(plic$axi4_slave_awburst),
		     .axi4_slave_awcache(plic$axi4_slave_awcache),
		     .axi4_slave_awid(plic$axi4_slave_awid),
		     .axi4_slave_awlen(plic$axi4_slave_awlen),
		     .axi4_slave_awlock(plic$axi4_slave_awlock),
		     .axi4_slave_awprot(plic$axi4_slave_awprot),
		     .axi4_slave_awqos(plic$axi4_slave_awqos),
		     .axi4_slave_awregion(plic$axi4_slave_awregion),
		     .axi4_slave_awsize(plic$axi4_slave_awsize),
		     .axi4_slave_awvalid(plic$axi4_slave_awvalid),
		     .axi4_slave_bready(plic$axi4_slave_bready),
		     .axi4_slave_rready(plic$axi4_slave_rready),
		     .axi4_slave_wdata(plic$axi4_slave_wdata),
		     .axi4_slave_wlast(plic$axi4_slave_wlast),
		     .axi4_slave_wstrb(plic$axi4_slave_wstrb),
		     .axi4_slave_wvalid(plic$axi4_slave_wvalid),
		     .set_addr_map_addr_base(plic$set_addr_map_addr_base),
		     .set_addr_map_addr_lim(plic$set_addr_map_addr_lim),
		     .set_verbosity_verbosity(plic$set_verbosity_verbosity),
		     .v_sources_0_m_interrupt_req_set_not_clear(plic$v_sources_0_m_interrupt_req_set_not_clear),
		     .v_sources_10_m_interrupt_req_set_not_clear(plic$v_sources_10_m_interrupt_req_set_not_clear),
		     .v_sources_11_m_interrupt_req_set_not_clear(plic$v_sources_11_m_interrupt_req_set_not_clear),
		     .v_sources_12_m_interrupt_req_set_not_clear(plic$v_sources_12_m_interrupt_req_set_not_clear),
		     .v_sources_13_m_interrupt_req_set_not_clear(plic$v_sources_13_m_interrupt_req_set_not_clear),
		     .v_sources_14_m_interrupt_req_set_not_clear(plic$v_sources_14_m_interrupt_req_set_not_clear),
		     .v_sources_15_m_interrupt_req_set_not_clear(plic$v_sources_15_m_interrupt_req_set_not_clear),
		     .v_sources_1_m_interrupt_req_set_not_clear(plic$v_sources_1_m_interrupt_req_set_not_clear),
		     .v_sources_2_m_interrupt_req_set_not_clear(plic$v_sources_2_m_interrupt_req_set_not_clear),
		     .v_sources_3_m_interrupt_req_set_not_clear(plic$v_sources_3_m_interrupt_req_set_not_clear),
		     .v_sources_4_m_interrupt_req_set_not_clear(plic$v_sources_4_m_interrupt_req_set_not_clear),
		     .v_sources_5_m_interrupt_req_set_not_clear(plic$v_sources_5_m_interrupt_req_set_not_clear),
		     .v_sources_6_m_interrupt_req_set_not_clear(plic$v_sources_6_m_interrupt_req_set_not_clear),
		     .v_sources_7_m_interrupt_req_set_not_clear(plic$v_sources_7_m_interrupt_req_set_not_clear),
		     .v_sources_8_m_interrupt_req_set_not_clear(plic$v_sources_8_m_interrupt_req_set_not_clear),
		     .v_sources_9_m_interrupt_req_set_not_clear(plic$v_sources_9_m_interrupt_req_set_not_clear),
		     .EN_set_verbosity(plic$EN_set_verbosity),
		     .EN_show_PLIC_state(plic$EN_show_PLIC_state),
		     .EN_server_reset_request_put(plic$EN_server_reset_request_put),
		     .EN_server_reset_response_get(plic$EN_server_reset_response_get),
		     .EN_set_addr_map(plic$EN_set_addr_map),
		     .RDY_set_verbosity(),
		     .RDY_show_PLIC_state(),
		     .RDY_server_reset_request_put(plic$RDY_server_reset_request_put),
		     .RDY_server_reset_response_get(plic$RDY_server_reset_response_get),
		     .RDY_set_addr_map(),
		     .axi4_slave_awready(plic$axi4_slave_awready),
		     .axi4_slave_wready(plic$axi4_slave_wready),
		     .axi4_slave_bvalid(plic$axi4_slave_bvalid),
		     .axi4_slave_bid(plic$axi4_slave_bid),
		     .axi4_slave_bresp(plic$axi4_slave_bresp),
		     .axi4_slave_arready(plic$axi4_slave_arready),
		     .axi4_slave_rvalid(plic$axi4_slave_rvalid),
		     .axi4_slave_rid(plic$axi4_slave_rid),
		     .axi4_slave_rdata(plic$axi4_slave_rdata),
		     .axi4_slave_rresp(plic$axi4_slave_rresp),
		     .axi4_slave_rlast(plic$axi4_slave_rlast),
		     .v_targets_0_m_eip(plic$v_targets_0_m_eip));

  // submodule soc_map
  mkSoC_Map soc_map(.CLK(CLK),
		    .RST_N(RST_N),
		    .m_is_IO_addr_addr(soc_map$m_is_IO_addr_addr),
		    .m_is_clint_addr_addr(soc_map$m_is_clint_addr_addr),
		    .m_is_dtcm_addr_addr(soc_map$m_is_dtcm_addr_addr),
		    .m_is_itcm_addr_addr(soc_map$m_is_itcm_addr_addr),
		    .m_is_mem_addr_addr(soc_map$m_is_mem_addr_addr),
		    .m_is_nmio_addr_addr(soc_map$m_is_nmio_addr_addr),
		    .m_is_tcm_addr_addr(soc_map$m_is_tcm_addr_addr),
		    .m_clint_addr_base(soc_map$m_clint_addr_base),
		    .m_clint_addr_size(),
		    .m_clint_addr_lim(soc_map$m_clint_addr_lim),
		    .m_plic_addr_base(soc_map$m_plic_addr_base),
		    .m_plic_addr_size(),
		    .m_plic_addr_lim(soc_map$m_plic_addr_lim),
		    .m_uart0_addr_base(),
		    .m_uart0_addr_size(),
		    .m_uart0_addr_lim(),
		    .m_gpio0_addr_base(),
		    .m_gpio0_addr_size(),
		    .m_gpio0_addr_lim(),
		    .m_boot_rom_addr_base(),
		    .m_boot_rom_addr_size(),
		    .m_boot_rom_addr_lim(),
		    .m_mem0_controller_addr_base(),
		    .m_mem0_controller_addr_size(),
		    .m_mem0_controller_addr_lim(),
		    .m_itcm_addr_base(),
		    .m_itcm_addr_size(),
		    .m_itcm_addr_lim(),
		    .m_is_itcm_addr(),
		    .m_dtcm_addr_base(),
		    .m_dtcm_addr_size(),
		    .m_dtcm_addr_lim(),
		    .m_is_dtcm_addr(),
		    .m_is_tcm_addr(),
		    .m_is_mem_addr(),
		    .m_is_IO_addr(),
		    .m_is_nmio_addr(),
		    .m_is_clint_addr(),
		    .m_pc_reset_value(),
		    .m_mtvec_reset_value(),
		    .m_nmivec_reset_value());

  // rule RL_rl_wr_addr_channel
  assign CAN_FIRE_RL_rl_wr_addr_channel = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel = 1'd1 ;

  // rule RL_rl_wr_data_channel
  assign CAN_FIRE_RL_rl_wr_data_channel = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel = 1'd1 ;

  // rule RL_rl_wr_response_channel
  assign CAN_FIRE_RL_rl_wr_response_channel = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel = 1'd1 ;

  // rule RL_rl_rd_addr_channel
  assign CAN_FIRE_RL_rl_rd_addr_channel = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel = 1'd1 ;

  // rule RL_rl_rd_data_channel
  assign CAN_FIRE_RL_rl_rd_data_channel = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel = 1'd1 ;

  // rule RL_rl_wr_addr_channel_1
  assign CAN_FIRE_RL_rl_wr_addr_channel_1 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_1 = 1'd1 ;

  // rule RL_rl_wr_data_channel_1
  assign CAN_FIRE_RL_rl_wr_data_channel_1 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_1 = 1'd1 ;

  // rule RL_rl_wr_response_channel_1
  assign CAN_FIRE_RL_rl_wr_response_channel_1 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_1 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_1
  assign CAN_FIRE_RL_rl_rd_addr_channel_1 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_1 = 1'd1 ;

  // rule RL_rl_rd_data_channel_1
  assign CAN_FIRE_RL_rl_rd_data_channel_1 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_1 = 1'd1 ;

  // rule RL_rl_wr_addr_channel_2
  assign CAN_FIRE_RL_rl_wr_addr_channel_2 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_2 = 1'd1 ;

  // rule RL_rl_wr_data_channel_2
  assign CAN_FIRE_RL_rl_wr_data_channel_2 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_2 = 1'd1 ;

  // rule RL_rl_wr_response_channel_2
  assign CAN_FIRE_RL_rl_wr_response_channel_2 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_2 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_2
  assign CAN_FIRE_RL_rl_rd_addr_channel_2 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_2 = 1'd1 ;

  // rule RL_rl_rd_data_channel_2
  assign CAN_FIRE_RL_rl_rd_data_channel_2 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_2 = 1'd1 ;

  // rule RL_rl_wr_addr_channel_3
  assign CAN_FIRE_RL_rl_wr_addr_channel_3 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_3 = 1'd1 ;

  // rule RL_rl_wr_data_channel_3
  assign CAN_FIRE_RL_rl_wr_data_channel_3 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_3 = 1'd1 ;

  // rule RL_rl_wr_response_channel_3
  assign CAN_FIRE_RL_rl_wr_response_channel_3 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_3 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_3
  assign CAN_FIRE_RL_rl_rd_addr_channel_3 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_3 = 1'd1 ;

  // rule RL_rl_rd_data_channel_3
  assign CAN_FIRE_RL_rl_rd_data_channel_3 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_3 = 1'd1 ;

  // rule RL_rl_wr_addr_channel_4
  assign CAN_FIRE_RL_rl_wr_addr_channel_4 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_4 = 1'd1 ;

  // rule RL_rl_wr_data_channel_4
  assign CAN_FIRE_RL_rl_wr_data_channel_4 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_4 = 1'd1 ;

  // rule RL_rl_wr_response_channel_4
  assign CAN_FIRE_RL_rl_wr_response_channel_4 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_4 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_4
  assign CAN_FIRE_RL_rl_rd_addr_channel_4 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_4 = 1'd1 ;

  // rule RL_rl_rd_data_channel_4
  assign CAN_FIRE_RL_rl_rd_data_channel_4 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_4 = 1'd1 ;

  // rule RL_rl_wr_addr_channel_5
  assign CAN_FIRE_RL_rl_wr_addr_channel_5 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_5 = 1'd1 ;

  // rule RL_rl_wr_data_channel_5
  assign CAN_FIRE_RL_rl_wr_data_channel_5 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_5 = 1'd1 ;

  // rule RL_rl_wr_response_channel_5
  assign CAN_FIRE_RL_rl_wr_response_channel_5 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_5 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_5
  assign CAN_FIRE_RL_rl_rd_addr_channel_5 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_5 = 1'd1 ;

  // rule RL_rl_rd_data_channel_5
  assign CAN_FIRE_RL_rl_rd_data_channel_5 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_5 = 1'd1 ;

  // rule RL_rl_relay_sw_interrupts
  assign CAN_FIRE_RL_rl_relay_sw_interrupts =
	     clint$RDY_get_sw_interrupt_req_get ;
  assign WILL_FIRE_RL_rl_relay_sw_interrupts =
	     clint$RDY_get_sw_interrupt_req_get ;

  // rule RL_rl_relay_timer_interrupts
  assign CAN_FIRE_RL_rl_relay_timer_interrupts =
	     clint$RDY_get_timer_interrupt_req_get ;
  assign WILL_FIRE_RL_rl_relay_timer_interrupts =
	     clint$RDY_get_timer_interrupt_req_get ;

  // rule RL_rl_relay_external_interrupts
  assign CAN_FIRE_RL_rl_relay_external_interrupts = 1'd1 ;
  assign WILL_FIRE_RL_rl_relay_external_interrupts = 1'd1 ;

  // rule RL_rl_cpu_hart0_reset_from_soc_start
  assign CAN_FIRE_RL_rl_cpu_hart0_reset_from_soc_start =
	     plic$RDY_server_reset_request_put &&
	     clint$RDY_server_reset_request_put &&
	     local_fabric_RDY_reset_AND_cpu_RDY_debug_hart__ETC___d9 ;
  assign WILL_FIRE_RL_rl_cpu_hart0_reset_from_soc_start =
	     CAN_FIRE_RL_rl_cpu_hart0_reset_from_soc_start ;

  // rule RL_rl_cpu_hart0_reset_complete
  assign CAN_FIRE_RL_rl_cpu_hart0_reset_complete =
	     plic$RDY_server_reset_response_get &&
	     clint_RDY_server_reset_response_get__6_AND_cpu_ETC___d22 &&
	     f_reset_requestor$D_OUT ;
  assign WILL_FIRE_RL_rl_cpu_hart0_reset_complete =
	     CAN_FIRE_RL_rl_cpu_hart0_reset_complete ;

  // rule RL_dm_stub_sbus_rsp_rl
  assign CAN_FIRE_RL_dm_stub_sbus_rsp_rl =
	     dm_stub_sbus_master_f_rd_data$EMPTY_N &&
	     dm_stub_input_Xactor_f_rd_data$FULL_N ;
  assign WILL_FIRE_RL_dm_stub_sbus_rsp_rl = CAN_FIRE_RL_dm_stub_sbus_rsp_rl ;

  // rule RL_dm_stub_reset_rsp_rl
  assign CAN_FIRE_RL_dm_stub_reset_rsp_rl =
	     !f_reset_requestor$D_OUT && plic$RDY_server_reset_response_get &&
	     clint$RDY_server_reset_response_get &&
	     cpu$RDY_debug_hart_reset_server_response_get &&
	     f_reset_requestor$EMPTY_N &&
	     dm_stub_input_Xactor_f_rd_data$FULL_N ;
  assign WILL_FIRE_RL_dm_stub_reset_rsp_rl =
	     CAN_FIRE_RL_dm_stub_reset_rsp_rl &&
	     !WILL_FIRE_RL_dm_stub_sbus_rsp_rl ;

  // rule RL_dm_stub_runhalt_rsp_rl
  assign CAN_FIRE_RL_dm_stub_runhalt_rsp_rl =
	     cpu$RDY_debug_hart_server_run_halt_response_get &&
	     dm_stub_input_Xactor_f_rd_data$FULL_N ;
  assign WILL_FIRE_RL_dm_stub_runhalt_rsp_rl =
	     CAN_FIRE_RL_dm_stub_runhalt_rsp_rl &&
	     !WILL_FIRE_RL_dm_stub_gpr_rd_rsp_rl &&
	     !WILL_FIRE_RL_dm_stub_reset_rsp_rl &&
	     !WILL_FIRE_RL_dm_stub_sbus_rsp_rl ;

  // rule RL_dm_stub_gpr_rd_rsp_rl
  assign CAN_FIRE_RL_dm_stub_gpr_rd_rsp_rl =
	     cpu$RDY_debug_hart_gpr_mem_server_response_get &&
	     dm_stub_input_Xactor_f_rd_data$FULL_N &&
	     !dm_stub_rg_writing ;
  assign WILL_FIRE_RL_dm_stub_gpr_rd_rsp_rl =
	     CAN_FIRE_RL_dm_stub_gpr_rd_rsp_rl &&
	     !WILL_FIRE_RL_dm_stub_reset_rsp_rl &&
	     !WILL_FIRE_RL_dm_stub_sbus_rsp_rl ;

  // rule RL_dm_stub_csr_rd_rsp_rl
  assign CAN_FIRE_RL_dm_stub_csr_rd_rsp_rl =
	     cpu$RDY_debug_hart_csr_mem_server_response_get &&
	     dm_stub_input_Xactor_f_rd_data$FULL_N &&
	     !dm_stub_rg_writing ;
  assign WILL_FIRE_RL_dm_stub_csr_rd_rsp_rl =
	     CAN_FIRE_RL_dm_stub_csr_rd_rsp_rl &&
	     !WILL_FIRE_RL_dm_stub_runhalt_rsp_rl &&
	     !WILL_FIRE_RL_dm_stub_gpr_rd_rsp_rl &&
	     !WILL_FIRE_RL_dm_stub_reset_rsp_rl &&
	     !WILL_FIRE_RL_dm_stub_sbus_rsp_rl ;

  // rule RL_dm_stub_burst_tl
  assign CAN_FIRE_RL_dm_stub_burst_tl =
	     dm_stub_input_Xactor_f_wr_data$EMPTY_N &&
	     dm_stub_sbus_master_f_wr_data$FULL_N &&
	     dm_stub_rg_bursting ;
  assign WILL_FIRE_RL_dm_stub_burst_tl = CAN_FIRE_RL_dm_stub_burst_tl ;

  // rule RL_dm_stub_sbus_wr_rsp_rl
  assign CAN_FIRE_RL_dm_stub_sbus_wr_rsp_rl =
	     dm_stub_sbus_master_f_wr_resp$EMPTY_N &&
	     dm_stub_input_Xactor_f_wr_resp$FULL_N ;
  assign WILL_FIRE_RL_dm_stub_sbus_wr_rsp_rl =
	     CAN_FIRE_RL_dm_stub_sbus_wr_rsp_rl ;

  // rule RL_dm_stub_gpr_wr_rsp_rl
  assign CAN_FIRE_RL_dm_stub_gpr_wr_rsp_rl =
	     cpu$RDY_debug_hart_gpr_mem_server_response_get &&
	     dm_stub_input_Xactor_f_wr_resp$FULL_N &&
	     dm_stub_rg_writing ;
  assign WILL_FIRE_RL_dm_stub_gpr_wr_rsp_rl =
	     CAN_FIRE_RL_dm_stub_gpr_wr_rsp_rl &&
	     !WILL_FIRE_RL_dm_stub_csr_wr_rsp_rl &&
	     !WILL_FIRE_RL_dm_stub_sbus_wr_rsp_rl ;

  // rule RL_dm_stub_csr_wr_rsp_rl
  assign CAN_FIRE_RL_dm_stub_csr_wr_rsp_rl =
	     cpu$RDY_debug_hart_csr_mem_server_response_get &&
	     dm_stub_input_Xactor_f_wr_resp$FULL_N &&
	     dm_stub_rg_writing ;
  assign WILL_FIRE_RL_dm_stub_csr_wr_rsp_rl =
	     CAN_FIRE_RL_dm_stub_csr_wr_rsp_rl &&
	     !WILL_FIRE_RL_dm_stub_sbus_wr_rsp_rl ;

  // rule RL_dm_stub_read_req_rl
  assign CAN_FIRE_RL_dm_stub_read_req_rl =
	     dm_stub_input_Xactor_f_rd_addr$EMPTY_N &&
	     IF_dm_stub_input_Xactor_f_rd_addr_first__4_BIT_ETC___d54 ;
  assign WILL_FIRE_RL_dm_stub_read_req_rl =
	     CAN_FIRE_RL_dm_stub_read_req_rl &&
	     !WILL_FIRE_RL_rl_cpu_hart0_reset_from_soc_start ;

  // rule RL_dm_stub_write_req_rl
  assign CAN_FIRE_RL_dm_stub_write_req_rl =
	     dm_stub_input_Xactor_f_wr_data$EMPTY_N &&
	     dm_stub_input_Xactor_f_wr_addr$EMPTY_N &&
	     IF_dm_stub_input_Xactor_f_wr_addr_first__13_BI_ETC___d123 &&
	     !dm_stub_rg_bursting ;
  assign WILL_FIRE_RL_dm_stub_write_req_rl =
	     CAN_FIRE_RL_dm_stub_write_req_rl &&
	     !WILL_FIRE_RL_dm_stub_read_req_rl ;

  // inputs to muxes for submodule ports
  assign MUX_clint$server_reset_request_put_1__SEL_1 =
	     WILL_FIRE_RL_dm_stub_read_req_rl &&
	     dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] == 4'd1 ;
  assign MUX_cpu$debug_hart_csr_mem_server_request_put_1__SEL_1 =
	     WILL_FIRE_RL_dm_stub_read_req_rl &&
	     dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] == 4'd4 ;
  assign MUX_cpu$debug_hart_gpr_mem_server_request_put_1__SEL_1 =
	     WILL_FIRE_RL_dm_stub_read_req_rl &&
	     dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] == 4'd3 ;
  assign MUX_dm_stub_rg_bursting$write_1__SEL_1 =
	     WILL_FIRE_RL_dm_stub_write_req_rl &&
	     dm_stub_input_Xactor_f_wr_addr$D_OUT[64:61] == 4'd0 ;
  assign MUX_cpu$debug_hart_csr_mem_server_request_put_1__VAL_1 =
	     { 1'd0, dm_stub_input_Xactor_f_rd_addr$D_OUT[40:0], 3'h2 } ;
  assign MUX_cpu$debug_hart_csr_mem_server_request_put_1__VAL_2 =
	     { 1'd1,
	       dm_stub_input_Xactor_f_wr_addr$D_OUT[40:29],
	       dm_stub_input_Xactor_f_wr_data$D_OUT[36:5] } ;
  assign MUX_cpu$debug_hart_gpr_mem_server_request_put_1__VAL_1 =
	     { 1'd0, dm_stub_input_Xactor_f_rd_addr$D_OUT[33:0], 3'h2 } ;
  assign MUX_cpu$debug_hart_gpr_mem_server_request_put_1__VAL_2 =
	     { 1'd1,
	       dm_stub_input_Xactor_f_wr_addr$D_OUT[33:29],
	       dm_stub_input_Xactor_f_wr_data$D_OUT[36:5] } ;
  assign MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_2 =
	     { 4'd1, x_rdata__h7611, 3'd1 } ;
  assign MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_3 =
	     { 4'd2, x_rdata__h7661, 3'd1 } ;
  assign MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_4 =
	     { 4'd3,
	       cpu$debug_hart_gpr_mem_server_response_get[31:0],
	       3'd1 } ;
  assign MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_5 =
	     { 4'd4,
	       cpu$debug_hart_csr_mem_server_response_get[31:0],
	       3'd1 } ;
  assign MUX_dm_stub_input_Xactor_f_wr_resp$enq_1__VAL_2 =
	     { 4'd3,
	       cpu$debug_hart_gpr_mem_server_response_get[32] ?
		 2'b0 :
		 2'b10 } ;
  assign MUX_dm_stub_input_Xactor_f_wr_resp$enq_1__VAL_3 =
	     { 4'd4,
	       cpu$debug_hart_csr_mem_server_response_get[32] ?
		 2'b0 :
		 2'b10 } ;

  // register dm_stub_rg_bursting
  assign dm_stub_rg_bursting$D_IN =
	     MUX_dm_stub_rg_bursting$write_1__SEL_1 ?
	       !dm_stub_input_Xactor_f_wr_data$D_OUT[0] :
	       !dm_stub_input_Xactor_f_wr_data$D_OUT[0] ;
  assign dm_stub_rg_bursting$EN =
	     WILL_FIRE_RL_dm_stub_write_req_rl &&
	     dm_stub_input_Xactor_f_wr_addr$D_OUT[64:61] == 4'd0 ||
	     WILL_FIRE_RL_dm_stub_burst_tl ;

  // register dm_stub_rg_writing
  assign dm_stub_rg_writing$D_IN = !WILL_FIRE_RL_dm_stub_read_req_rl ;
  assign dm_stub_rg_writing$EN =
	     WILL_FIRE_RL_dm_stub_read_req_rl ||
	     WILL_FIRE_RL_dm_stub_write_req_rl ;

  // submodule clint
  assign clint$axi4_slave_araddr = local_fabric$v_to_slaves_1_araddr ;
  assign clint$axi4_slave_arburst = local_fabric$v_to_slaves_1_arburst ;
  assign clint$axi4_slave_arcache = local_fabric$v_to_slaves_1_arcache ;
  assign clint$axi4_slave_arid = local_fabric$v_to_slaves_1_arid ;
  assign clint$axi4_slave_arlen = local_fabric$v_to_slaves_1_arlen ;
  assign clint$axi4_slave_arlock = local_fabric$v_to_slaves_1_arlock ;
  assign clint$axi4_slave_arprot = local_fabric$v_to_slaves_1_arprot ;
  assign clint$axi4_slave_arqos = local_fabric$v_to_slaves_1_arqos ;
  assign clint$axi4_slave_arregion = local_fabric$v_to_slaves_1_arregion ;
  assign clint$axi4_slave_arsize = local_fabric$v_to_slaves_1_arsize ;
  assign clint$axi4_slave_arvalid = local_fabric$v_to_slaves_1_arvalid ;
  assign clint$axi4_slave_awaddr = local_fabric$v_to_slaves_1_awaddr ;
  assign clint$axi4_slave_awburst = local_fabric$v_to_slaves_1_awburst ;
  assign clint$axi4_slave_awcache = local_fabric$v_to_slaves_1_awcache ;
  assign clint$axi4_slave_awid = local_fabric$v_to_slaves_1_awid ;
  assign clint$axi4_slave_awlen = local_fabric$v_to_slaves_1_awlen ;
  assign clint$axi4_slave_awlock = local_fabric$v_to_slaves_1_awlock ;
  assign clint$axi4_slave_awprot = local_fabric$v_to_slaves_1_awprot ;
  assign clint$axi4_slave_awqos = local_fabric$v_to_slaves_1_awqos ;
  assign clint$axi4_slave_awregion = local_fabric$v_to_slaves_1_awregion ;
  assign clint$axi4_slave_awsize = local_fabric$v_to_slaves_1_awsize ;
  assign clint$axi4_slave_awvalid = local_fabric$v_to_slaves_1_awvalid ;
  assign clint$axi4_slave_bready = local_fabric$v_to_slaves_1_bready ;
  assign clint$axi4_slave_rready = local_fabric$v_to_slaves_1_rready ;
  assign clint$axi4_slave_wdata = local_fabric$v_to_slaves_1_wdata ;
  assign clint$axi4_slave_wlast = local_fabric$v_to_slaves_1_wlast ;
  assign clint$axi4_slave_wstrb = local_fabric$v_to_slaves_1_wstrb ;
  assign clint$axi4_slave_wvalid = local_fabric$v_to_slaves_1_wvalid ;
  assign clint$set_addr_map_addr_base = soc_map$m_clint_addr_base ;
  assign clint$set_addr_map_addr_lim = soc_map$m_clint_addr_lim ;
  assign clint$EN_server_reset_request_put =
	     WILL_FIRE_RL_dm_stub_read_req_rl &&
	     dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] == 4'd1 ||
	     WILL_FIRE_RL_rl_cpu_hart0_reset_from_soc_start ;
  assign clint$EN_server_reset_response_get =
	     WILL_FIRE_RL_dm_stub_reset_rsp_rl ||
	     WILL_FIRE_RL_rl_cpu_hart0_reset_complete ;
  assign clint$EN_set_addr_map =
	     WILL_FIRE_RL_dm_stub_reset_rsp_rl ||
	     WILL_FIRE_RL_rl_cpu_hart0_reset_complete ;
  assign clint$EN_get_timer_interrupt_req_get =
	     clint$RDY_get_timer_interrupt_req_get ;
  assign clint$EN_get_sw_interrupt_req_get =
	     clint$RDY_get_sw_interrupt_req_get ;

  // submodule cpu
  assign cpu$debug_hart_csr_mem_server_request_put =
	     MUX_cpu$debug_hart_csr_mem_server_request_put_1__SEL_1 ?
	       MUX_cpu$debug_hart_csr_mem_server_request_put_1__VAL_1 :
	       MUX_cpu$debug_hart_csr_mem_server_request_put_1__VAL_2 ;
  assign cpu$debug_hart_gpr_mem_server_request_put =
	     MUX_cpu$debug_hart_gpr_mem_server_request_put_1__SEL_1 ?
	       MUX_cpu$debug_hart_gpr_mem_server_request_put_1__VAL_1 :
	       MUX_cpu$debug_hart_gpr_mem_server_request_put_1__VAL_2 ;
  assign cpu$debug_hart_put_other_req_put = 4'h0 ;
  assign cpu$debug_hart_reset_server_request_put =
	     MUX_clint$server_reset_request_put_1__SEL_1 ?
	       dm_stub_input_Xactor_f_rd_addr$D_OUT[29] :
	       f_reset_reqs$D_OUT ;
  assign cpu$debug_hart_server_run_halt_request_put =
	     dm_stub_input_Xactor_f_rd_addr$D_OUT[29] ;
  assign cpu$dmem_dma_server_araddr = local_fabric$v_to_slaves_3_araddr ;
  assign cpu$dmem_dma_server_arburst = local_fabric$v_to_slaves_3_arburst ;
  assign cpu$dmem_dma_server_arcache = local_fabric$v_to_slaves_3_arcache ;
  assign cpu$dmem_dma_server_arid = local_fabric$v_to_slaves_3_arid ;
  assign cpu$dmem_dma_server_arlen = local_fabric$v_to_slaves_3_arlen ;
  assign cpu$dmem_dma_server_arlock = local_fabric$v_to_slaves_3_arlock ;
  assign cpu$dmem_dma_server_arprot = local_fabric$v_to_slaves_3_arprot ;
  assign cpu$dmem_dma_server_arqos = local_fabric$v_to_slaves_3_arqos ;
  assign cpu$dmem_dma_server_arregion = local_fabric$v_to_slaves_3_arregion ;
  assign cpu$dmem_dma_server_arsize = local_fabric$v_to_slaves_3_arsize ;
  assign cpu$dmem_dma_server_arvalid = local_fabric$v_to_slaves_3_arvalid ;
  assign cpu$dmem_dma_server_awaddr = local_fabric$v_to_slaves_3_awaddr ;
  assign cpu$dmem_dma_server_awburst = local_fabric$v_to_slaves_3_awburst ;
  assign cpu$dmem_dma_server_awcache = local_fabric$v_to_slaves_3_awcache ;
  assign cpu$dmem_dma_server_awid = local_fabric$v_to_slaves_3_awid ;
  assign cpu$dmem_dma_server_awlen = local_fabric$v_to_slaves_3_awlen ;
  assign cpu$dmem_dma_server_awlock = local_fabric$v_to_slaves_3_awlock ;
  assign cpu$dmem_dma_server_awprot = local_fabric$v_to_slaves_3_awprot ;
  assign cpu$dmem_dma_server_awqos = local_fabric$v_to_slaves_3_awqos ;
  assign cpu$dmem_dma_server_awregion = local_fabric$v_to_slaves_3_awregion ;
  assign cpu$dmem_dma_server_awsize = local_fabric$v_to_slaves_3_awsize ;
  assign cpu$dmem_dma_server_awvalid = local_fabric$v_to_slaves_3_awvalid ;
  assign cpu$dmem_dma_server_bready = local_fabric$v_to_slaves_3_bready ;
  assign cpu$dmem_dma_server_rready = local_fabric$v_to_slaves_3_rready ;
  assign cpu$dmem_dma_server_wdata = local_fabric$v_to_slaves_3_wdata ;
  assign cpu$dmem_dma_server_wlast = local_fabric$v_to_slaves_3_wlast ;
  assign cpu$dmem_dma_server_wstrb = local_fabric$v_to_slaves_3_wstrb ;
  assign cpu$dmem_dma_server_wvalid = local_fabric$v_to_slaves_3_wvalid ;
  assign cpu$dmem_master_HRDATA = cpu_dmem_master_HRDATA ;
  assign cpu$dmem_master_HREADY = cpu_dmem_master_HREADY ;
  assign cpu$dmem_master_HRESP = cpu_dmem_master_HRESP ;
  assign cpu$imem_dma_server_araddr = local_fabric$v_to_slaves_2_araddr ;
  assign cpu$imem_dma_server_arburst = local_fabric$v_to_slaves_2_arburst ;
  assign cpu$imem_dma_server_arcache = local_fabric$v_to_slaves_2_arcache ;
  assign cpu$imem_dma_server_arid = local_fabric$v_to_slaves_2_arid ;
  assign cpu$imem_dma_server_arlen = local_fabric$v_to_slaves_2_arlen ;
  assign cpu$imem_dma_server_arlock = local_fabric$v_to_slaves_2_arlock ;
  assign cpu$imem_dma_server_arprot = local_fabric$v_to_slaves_2_arprot ;
  assign cpu$imem_dma_server_arqos = local_fabric$v_to_slaves_2_arqos ;
  assign cpu$imem_dma_server_arregion = local_fabric$v_to_slaves_2_arregion ;
  assign cpu$imem_dma_server_arsize = local_fabric$v_to_slaves_2_arsize ;
  assign cpu$imem_dma_server_arvalid = local_fabric$v_to_slaves_2_arvalid ;
  assign cpu$imem_dma_server_awaddr = local_fabric$v_to_slaves_2_awaddr ;
  assign cpu$imem_dma_server_awburst = local_fabric$v_to_slaves_2_awburst ;
  assign cpu$imem_dma_server_awcache = local_fabric$v_to_slaves_2_awcache ;
  assign cpu$imem_dma_server_awid = local_fabric$v_to_slaves_2_awid ;
  assign cpu$imem_dma_server_awlen = local_fabric$v_to_slaves_2_awlen ;
  assign cpu$imem_dma_server_awlock = local_fabric$v_to_slaves_2_awlock ;
  assign cpu$imem_dma_server_awprot = local_fabric$v_to_slaves_2_awprot ;
  assign cpu$imem_dma_server_awqos = local_fabric$v_to_slaves_2_awqos ;
  assign cpu$imem_dma_server_awregion = local_fabric$v_to_slaves_2_awregion ;
  assign cpu$imem_dma_server_awsize = local_fabric$v_to_slaves_2_awsize ;
  assign cpu$imem_dma_server_awvalid = local_fabric$v_to_slaves_2_awvalid ;
  assign cpu$imem_dma_server_bready = local_fabric$v_to_slaves_2_bready ;
  assign cpu$imem_dma_server_rready = local_fabric$v_to_slaves_2_rready ;
  assign cpu$imem_dma_server_wdata = local_fabric$v_to_slaves_2_wdata ;
  assign cpu$imem_dma_server_wlast = local_fabric$v_to_slaves_2_wlast ;
  assign cpu$imem_dma_server_wstrb = local_fabric$v_to_slaves_2_wstrb ;
  assign cpu$imem_dma_server_wvalid = local_fabric$v_to_slaves_2_wvalid ;
  assign cpu$m_external_interrupt_req_set_not_clear = plic$v_targets_0_m_eip ;
  assign cpu$nmi_req_set_not_clear = nmi_req_set_not_clear ;
  assign cpu$nmio_master_arready = local_fabric$v_from_masters_0_arready ;
  assign cpu$nmio_master_awready = local_fabric$v_from_masters_0_awready ;
  assign cpu$nmio_master_bid = local_fabric$v_from_masters_0_bid ;
  assign cpu$nmio_master_bresp = local_fabric$v_from_masters_0_bresp ;
  assign cpu$nmio_master_bvalid = local_fabric$v_from_masters_0_bvalid ;
  assign cpu$nmio_master_rdata = local_fabric$v_from_masters_0_rdata ;
  assign cpu$nmio_master_rid = local_fabric$v_from_masters_0_rid ;
  assign cpu$nmio_master_rlast = local_fabric$v_from_masters_0_rlast ;
  assign cpu$nmio_master_rresp = local_fabric$v_from_masters_0_rresp ;
  assign cpu$nmio_master_rvalid = local_fabric$v_from_masters_0_rvalid ;
  assign cpu$nmio_master_wready = local_fabric$v_from_masters_0_wready ;
  assign cpu$s_external_interrupt_req_set_not_clear = 1'd0 ;
  assign cpu$set_verbosity_logdelay = set_verbosity_logdelay ;
  assign cpu$set_verbosity_verbosity = set_verbosity_verbosity ;
  assign cpu$set_watch_tohost_tohost_addr = set_watch_tohost_tohost_addr ;
  assign cpu$set_watch_tohost_watch_tohost = set_watch_tohost_watch_tohost ;
  assign cpu$software_interrupt_req_set_not_clear =
	     clint$get_sw_interrupt_req_get ;
  assign cpu$timer_interrupt_req_set_not_clear =
	     clint$get_timer_interrupt_req_get ;
  assign cpu$EN_debug_hart_reset_server_request_put =
	     WILL_FIRE_RL_dm_stub_read_req_rl &&
	     dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] == 4'd1 ||
	     WILL_FIRE_RL_rl_cpu_hart0_reset_from_soc_start ;
  assign cpu$EN_debug_hart_reset_server_response_get =
	     WILL_FIRE_RL_dm_stub_reset_rsp_rl ||
	     WILL_FIRE_RL_rl_cpu_hart0_reset_complete ;
  assign cpu$EN_debug_hart_server_run_halt_request_put =
	     WILL_FIRE_RL_dm_stub_read_req_rl &&
	     dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] == 4'd2 ;
  assign cpu$EN_debug_hart_server_run_halt_response_get =
	     WILL_FIRE_RL_dm_stub_runhalt_rsp_rl ;
  assign cpu$EN_debug_hart_put_other_req_put = 1'b0 ;
  assign cpu$EN_debug_hart_gpr_mem_server_request_put =
	     WILL_FIRE_RL_dm_stub_read_req_rl &&
	     dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] == 4'd3 ||
	     WILL_FIRE_RL_dm_stub_write_req_rl &&
	     dm_stub_input_Xactor_f_wr_addr$D_OUT[64:61] == 4'd3 ;
  assign cpu$EN_debug_hart_gpr_mem_server_response_get =
	     WILL_FIRE_RL_dm_stub_gpr_wr_rsp_rl ||
	     WILL_FIRE_RL_dm_stub_gpr_rd_rsp_rl ;
  assign cpu$EN_debug_hart_csr_mem_server_request_put =
	     WILL_FIRE_RL_dm_stub_read_req_rl &&
	     dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] == 4'd4 ||
	     WILL_FIRE_RL_dm_stub_write_req_rl &&
	     dm_stub_input_Xactor_f_wr_addr$D_OUT[64:61] == 4'd4 ;
  assign cpu$EN_debug_hart_csr_mem_server_response_get =
	     WILL_FIRE_RL_dm_stub_csr_wr_rsp_rl ||
	     WILL_FIRE_RL_dm_stub_csr_rd_rsp_rl ;
  assign cpu$EN_set_verbosity = EN_set_verbosity ;
  assign cpu$EN_set_watch_tohost = EN_set_watch_tohost ;

  // submodule dm_stub_input_Xactor_f_rd_addr
  assign dm_stub_input_Xactor_f_rd_addr$D_IN =
	     { debug_arid,
	       debug_araddr,
	       debug_arlen,
	       debug_arsize,
	       debug_arburst,
	       debug_arlock,
	       debug_arcache,
	       debug_arprot,
	       debug_arqos,
	       debug_arregion } ;
  assign dm_stub_input_Xactor_f_rd_addr$ENQ =
	     debug_arvalid && dm_stub_input_Xactor_f_rd_addr$FULL_N ;
  assign dm_stub_input_Xactor_f_rd_addr$DEQ =
	     WILL_FIRE_RL_dm_stub_read_req_rl ;
  assign dm_stub_input_Xactor_f_rd_addr$CLR = 1'b0 ;

  // submodule dm_stub_input_Xactor_f_rd_data
  always@(WILL_FIRE_RL_dm_stub_sbus_rsp_rl or
	  dm_stub_sbus_master_f_rd_data$D_OUT or
	  WILL_FIRE_RL_dm_stub_reset_rsp_rl or
	  MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_2 or
	  WILL_FIRE_RL_dm_stub_runhalt_rsp_rl or
	  MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_3 or
	  WILL_FIRE_RL_dm_stub_gpr_rd_rsp_rl or
	  MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_4 or
	  WILL_FIRE_RL_dm_stub_csr_rd_rsp_rl or
	  MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_dm_stub_sbus_rsp_rl:
	  dm_stub_input_Xactor_f_rd_data$D_IN =
	      dm_stub_sbus_master_f_rd_data$D_OUT;
      WILL_FIRE_RL_dm_stub_reset_rsp_rl:
	  dm_stub_input_Xactor_f_rd_data$D_IN =
	      MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_2;
      WILL_FIRE_RL_dm_stub_runhalt_rsp_rl:
	  dm_stub_input_Xactor_f_rd_data$D_IN =
	      MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_3;
      WILL_FIRE_RL_dm_stub_gpr_rd_rsp_rl:
	  dm_stub_input_Xactor_f_rd_data$D_IN =
	      MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_4;
      WILL_FIRE_RL_dm_stub_csr_rd_rsp_rl:
	  dm_stub_input_Xactor_f_rd_data$D_IN =
	      MUX_dm_stub_input_Xactor_f_rd_data$enq_1__VAL_5;
      default: dm_stub_input_Xactor_f_rd_data$D_IN =
		   39'h2AAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign dm_stub_input_Xactor_f_rd_data$ENQ =
	     WILL_FIRE_RL_dm_stub_sbus_rsp_rl ||
	     WILL_FIRE_RL_dm_stub_reset_rsp_rl ||
	     WILL_FIRE_RL_dm_stub_runhalt_rsp_rl ||
	     WILL_FIRE_RL_dm_stub_gpr_rd_rsp_rl ||
	     WILL_FIRE_RL_dm_stub_csr_rd_rsp_rl ;
  assign dm_stub_input_Xactor_f_rd_data$DEQ =
	     debug_rready && dm_stub_input_Xactor_f_rd_data$EMPTY_N ;
  assign dm_stub_input_Xactor_f_rd_data$CLR = 1'b0 ;

  // submodule dm_stub_input_Xactor_f_wr_addr
  assign dm_stub_input_Xactor_f_wr_addr$D_IN =
	     { debug_awid,
	       debug_awaddr,
	       debug_awlen,
	       debug_awsize,
	       debug_awburst,
	       debug_awlock,
	       debug_awcache,
	       debug_awprot,
	       debug_awqos,
	       debug_awregion } ;
  assign dm_stub_input_Xactor_f_wr_addr$ENQ =
	     debug_awvalid && dm_stub_input_Xactor_f_wr_addr$FULL_N ;
  assign dm_stub_input_Xactor_f_wr_addr$DEQ =
	     WILL_FIRE_RL_dm_stub_write_req_rl ;
  assign dm_stub_input_Xactor_f_wr_addr$CLR = 1'b0 ;

  // submodule dm_stub_input_Xactor_f_wr_data
  assign dm_stub_input_Xactor_f_wr_data$D_IN =
	     { debug_wdata, debug_wstrb, debug_wlast } ;
  assign dm_stub_input_Xactor_f_wr_data$ENQ =
	     debug_wvalid && dm_stub_input_Xactor_f_wr_data$FULL_N ;
  assign dm_stub_input_Xactor_f_wr_data$DEQ =
	     WILL_FIRE_RL_dm_stub_write_req_rl ||
	     WILL_FIRE_RL_dm_stub_burst_tl ;
  assign dm_stub_input_Xactor_f_wr_data$CLR = 1'b0 ;

  // submodule dm_stub_input_Xactor_f_wr_resp
  always@(WILL_FIRE_RL_dm_stub_sbus_wr_rsp_rl or
	  dm_stub_sbus_master_f_wr_resp$D_OUT or
	  WILL_FIRE_RL_dm_stub_gpr_wr_rsp_rl or
	  MUX_dm_stub_input_Xactor_f_wr_resp$enq_1__VAL_2 or
	  WILL_FIRE_RL_dm_stub_csr_wr_rsp_rl or
	  MUX_dm_stub_input_Xactor_f_wr_resp$enq_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_dm_stub_sbus_wr_rsp_rl:
	  dm_stub_input_Xactor_f_wr_resp$D_IN =
	      dm_stub_sbus_master_f_wr_resp$D_OUT;
      WILL_FIRE_RL_dm_stub_gpr_wr_rsp_rl:
	  dm_stub_input_Xactor_f_wr_resp$D_IN =
	      MUX_dm_stub_input_Xactor_f_wr_resp$enq_1__VAL_2;
      WILL_FIRE_RL_dm_stub_csr_wr_rsp_rl:
	  dm_stub_input_Xactor_f_wr_resp$D_IN =
	      MUX_dm_stub_input_Xactor_f_wr_resp$enq_1__VAL_3;
      default: dm_stub_input_Xactor_f_wr_resp$D_IN =
		   6'b101010 /* unspecified value */ ;
    endcase
  end
  assign dm_stub_input_Xactor_f_wr_resp$ENQ =
	     WILL_FIRE_RL_dm_stub_sbus_wr_rsp_rl ||
	     WILL_FIRE_RL_dm_stub_gpr_wr_rsp_rl ||
	     WILL_FIRE_RL_dm_stub_csr_wr_rsp_rl ;
  assign dm_stub_input_Xactor_f_wr_resp$DEQ =
	     debug_bready && dm_stub_input_Xactor_f_wr_resp$EMPTY_N ;
  assign dm_stub_input_Xactor_f_wr_resp$CLR = 1'b0 ;

  // submodule dm_stub_sbus_master_f_rd_addr
  assign dm_stub_sbus_master_f_rd_addr$D_IN =
	     dm_stub_input_Xactor_f_rd_addr$D_OUT ;
  assign dm_stub_sbus_master_f_rd_addr$ENQ =
	     WILL_FIRE_RL_dm_stub_read_req_rl &&
	     dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] == 4'd0 ;
  assign dm_stub_sbus_master_f_rd_addr$DEQ =
	     dm_stub_sbus_master_f_rd_addr$EMPTY_N &&
	     local_fabric$v_from_masters_1_arready ;
  assign dm_stub_sbus_master_f_rd_addr$CLR = 1'b0 ;

  // submodule dm_stub_sbus_master_f_rd_data
  assign dm_stub_sbus_master_f_rd_data$D_IN =
	     { local_fabric$v_from_masters_1_rid,
	       local_fabric$v_from_masters_1_rdata,
	       local_fabric$v_from_masters_1_rresp,
	       local_fabric$v_from_masters_1_rlast } ;
  assign dm_stub_sbus_master_f_rd_data$ENQ =
	     local_fabric$v_from_masters_1_rvalid &&
	     dm_stub_sbus_master_f_rd_data$FULL_N ;
  assign dm_stub_sbus_master_f_rd_data$DEQ = CAN_FIRE_RL_dm_stub_sbus_rsp_rl ;
  assign dm_stub_sbus_master_f_rd_data$CLR = 1'b0 ;

  // submodule dm_stub_sbus_master_f_wr_addr
  assign dm_stub_sbus_master_f_wr_addr$D_IN =
	     dm_stub_input_Xactor_f_wr_addr$D_OUT ;
  assign dm_stub_sbus_master_f_wr_addr$ENQ =
	     MUX_dm_stub_rg_bursting$write_1__SEL_1 ;
  assign dm_stub_sbus_master_f_wr_addr$DEQ =
	     dm_stub_sbus_master_f_wr_addr$EMPTY_N &&
	     local_fabric$v_from_masters_1_awready ;
  assign dm_stub_sbus_master_f_wr_addr$CLR = 1'b0 ;

  // submodule dm_stub_sbus_master_f_wr_data
  assign dm_stub_sbus_master_f_wr_data$D_IN =
	     dm_stub_input_Xactor_f_wr_data$D_OUT ;
  assign dm_stub_sbus_master_f_wr_data$ENQ =
	     WILL_FIRE_RL_dm_stub_write_req_rl &&
	     dm_stub_input_Xactor_f_wr_addr$D_OUT[64:61] == 4'd0 ||
	     WILL_FIRE_RL_dm_stub_burst_tl ;
  assign dm_stub_sbus_master_f_wr_data$DEQ =
	     dm_stub_sbus_master_f_wr_data$EMPTY_N &&
	     local_fabric$v_from_masters_1_wready ;
  assign dm_stub_sbus_master_f_wr_data$CLR = 1'b0 ;

  // submodule dm_stub_sbus_master_f_wr_resp
  assign dm_stub_sbus_master_f_wr_resp$D_IN =
	     { local_fabric$v_from_masters_1_bid,
	       local_fabric$v_from_masters_1_bresp } ;
  assign dm_stub_sbus_master_f_wr_resp$ENQ =
	     local_fabric$v_from_masters_1_bvalid &&
	     dm_stub_sbus_master_f_wr_resp$FULL_N ;
  assign dm_stub_sbus_master_f_wr_resp$DEQ =
	     CAN_FIRE_RL_dm_stub_sbus_wr_rsp_rl ;
  assign dm_stub_sbus_master_f_wr_resp$CLR = 1'b0 ;

  // submodule f_reset_reqs
  assign f_reset_reqs$D_IN = cpu_reset_server_request_put ;
  assign f_reset_reqs$ENQ = EN_cpu_reset_server_request_put ;
  assign f_reset_reqs$DEQ =
	     plic$RDY_server_reset_request_put &&
	     clint$RDY_server_reset_request_put &&
	     local_fabric_RDY_reset_AND_cpu_RDY_debug_hart__ETC___d9 ;
  assign f_reset_reqs$CLR = 1'b0 ;

  // submodule f_reset_requestor
  assign f_reset_requestor$D_IN =
	     !MUX_clint$server_reset_request_put_1__SEL_1 ;
  assign f_reset_requestor$ENQ =
	     WILL_FIRE_RL_dm_stub_read_req_rl &&
	     dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] == 4'd1 ||
	     WILL_FIRE_RL_rl_cpu_hart0_reset_from_soc_start ;
  assign f_reset_requestor$DEQ =
	     WILL_FIRE_RL_dm_stub_reset_rsp_rl ||
	     WILL_FIRE_RL_rl_cpu_hart0_reset_complete ;
  assign f_reset_requestor$CLR = 1'b0 ;

  // submodule f_reset_rsps
  assign f_reset_rsps$D_IN = cpu$debug_hart_reset_server_response_get ;
  assign f_reset_rsps$ENQ =
	     plic$RDY_server_reset_response_get &&
	     clint_RDY_server_reset_response_get__6_AND_cpu_ETC___d22 &&
	     f_reset_requestor$D_OUT ;
  assign f_reset_rsps$DEQ = EN_cpu_reset_server_response_get ;
  assign f_reset_rsps$CLR = 1'b0 ;

  // submodule local_fabric
  assign local_fabric$set_verbosity_verbosity = 4'h0 ;
  assign local_fabric$v_from_masters_0_araddr = cpu$nmio_master_araddr ;
  assign local_fabric$v_from_masters_0_arburst = cpu$nmio_master_arburst ;
  assign local_fabric$v_from_masters_0_arcache = cpu$nmio_master_arcache ;
  assign local_fabric$v_from_masters_0_arid = cpu$nmio_master_arid ;
  assign local_fabric$v_from_masters_0_arlen = cpu$nmio_master_arlen ;
  assign local_fabric$v_from_masters_0_arlock = cpu$nmio_master_arlock ;
  assign local_fabric$v_from_masters_0_arprot = cpu$nmio_master_arprot ;
  assign local_fabric$v_from_masters_0_arqos = cpu$nmio_master_arqos ;
  assign local_fabric$v_from_masters_0_arregion = cpu$nmio_master_arregion ;
  assign local_fabric$v_from_masters_0_arsize = cpu$nmio_master_arsize ;
  assign local_fabric$v_from_masters_0_arvalid = cpu$nmio_master_arvalid ;
  assign local_fabric$v_from_masters_0_awaddr = cpu$nmio_master_awaddr ;
  assign local_fabric$v_from_masters_0_awburst = cpu$nmio_master_awburst ;
  assign local_fabric$v_from_masters_0_awcache = cpu$nmio_master_awcache ;
  assign local_fabric$v_from_masters_0_awid = cpu$nmio_master_awid ;
  assign local_fabric$v_from_masters_0_awlen = cpu$nmio_master_awlen ;
  assign local_fabric$v_from_masters_0_awlock = cpu$nmio_master_awlock ;
  assign local_fabric$v_from_masters_0_awprot = cpu$nmio_master_awprot ;
  assign local_fabric$v_from_masters_0_awqos = cpu$nmio_master_awqos ;
  assign local_fabric$v_from_masters_0_awregion = cpu$nmio_master_awregion ;
  assign local_fabric$v_from_masters_0_awsize = cpu$nmio_master_awsize ;
  assign local_fabric$v_from_masters_0_awvalid = cpu$nmio_master_awvalid ;
  assign local_fabric$v_from_masters_0_bready = cpu$nmio_master_bready ;
  assign local_fabric$v_from_masters_0_rready = cpu$nmio_master_rready ;
  assign local_fabric$v_from_masters_0_wdata = cpu$nmio_master_wdata ;
  assign local_fabric$v_from_masters_0_wlast = cpu$nmio_master_wlast ;
  assign local_fabric$v_from_masters_0_wstrb = cpu$nmio_master_wstrb ;
  assign local_fabric$v_from_masters_0_wvalid = cpu$nmio_master_wvalid ;
  assign local_fabric$v_from_masters_1_araddr =
	     { dm_stub_sbus_master_f_rd_addr$D_OUT[60:31], 2'd0 } ;
  assign local_fabric$v_from_masters_1_arburst =
	     dm_stub_sbus_master_f_rd_addr$D_OUT[17:16] ;
  assign local_fabric$v_from_masters_1_arcache =
	     dm_stub_sbus_master_f_rd_addr$D_OUT[14:11] ;
  assign local_fabric$v_from_masters_1_arid =
	     dm_stub_sbus_master_f_rd_addr$D_OUT[64:61] ;
  assign local_fabric$v_from_masters_1_arlen =
	     dm_stub_sbus_master_f_rd_addr$D_OUT[28:21] ;
  assign local_fabric$v_from_masters_1_arlock =
	     dm_stub_sbus_master_f_rd_addr$D_OUT[15] ;
  assign local_fabric$v_from_masters_1_arprot =
	     dm_stub_sbus_master_f_rd_addr$D_OUT[10:8] ;
  assign local_fabric$v_from_masters_1_arqos =
	     dm_stub_sbus_master_f_rd_addr$D_OUT[7:4] ;
  assign local_fabric$v_from_masters_1_arregion =
	     dm_stub_sbus_master_f_rd_addr$D_OUT[3:0] ;
  assign local_fabric$v_from_masters_1_arsize = 3'd2 ;
  assign local_fabric$v_from_masters_1_arvalid =
	     dm_stub_sbus_master_f_rd_addr$EMPTY_N ;
  assign local_fabric$v_from_masters_1_awaddr =
	     { dm_stub_sbus_master_f_wr_addr$D_OUT[60:31], 2'd0 } ;
  assign local_fabric$v_from_masters_1_awburst =
	     dm_stub_sbus_master_f_wr_addr$D_OUT[17:16] ;
  assign local_fabric$v_from_masters_1_awcache =
	     dm_stub_sbus_master_f_wr_addr$D_OUT[14:11] ;
  assign local_fabric$v_from_masters_1_awid =
	     dm_stub_sbus_master_f_wr_addr$D_OUT[64:61] ;
  assign local_fabric$v_from_masters_1_awlen =
	     dm_stub_sbus_master_f_wr_addr$D_OUT[28:21] ;
  assign local_fabric$v_from_masters_1_awlock =
	     dm_stub_sbus_master_f_wr_addr$D_OUT[15] ;
  assign local_fabric$v_from_masters_1_awprot =
	     dm_stub_sbus_master_f_wr_addr$D_OUT[10:8] ;
  assign local_fabric$v_from_masters_1_awqos =
	     dm_stub_sbus_master_f_wr_addr$D_OUT[7:4] ;
  assign local_fabric$v_from_masters_1_awregion =
	     dm_stub_sbus_master_f_wr_addr$D_OUT[3:0] ;
  assign local_fabric$v_from_masters_1_awsize = 3'd2 ;
  assign local_fabric$v_from_masters_1_awvalid =
	     dm_stub_sbus_master_f_wr_addr$EMPTY_N ;
  assign local_fabric$v_from_masters_1_bready =
	     dm_stub_sbus_master_f_wr_resp$FULL_N ;
  assign local_fabric$v_from_masters_1_rready =
	     dm_stub_sbus_master_f_rd_data$FULL_N ;
  assign local_fabric$v_from_masters_1_wdata =
	     dm_stub_sbus_master_f_wr_data$D_OUT[36:5] ;
  assign local_fabric$v_from_masters_1_wlast =
	     dm_stub_sbus_master_f_wr_data$D_OUT[0] ;
  assign local_fabric$v_from_masters_1_wstrb =
	     dm_stub_sbus_master_f_wr_data$D_OUT[4:1] ;
  assign local_fabric$v_from_masters_1_wvalid =
	     dm_stub_sbus_master_f_wr_data$EMPTY_N ;
  assign local_fabric$v_to_slaves_0_arready = plic$axi4_slave_arready ;
  assign local_fabric$v_to_slaves_0_awready = plic$axi4_slave_awready ;
  assign local_fabric$v_to_slaves_0_bid = plic$axi4_slave_bid ;
  assign local_fabric$v_to_slaves_0_bresp = plic$axi4_slave_bresp ;
  assign local_fabric$v_to_slaves_0_bvalid = plic$axi4_slave_bvalid ;
  assign local_fabric$v_to_slaves_0_rdata = plic$axi4_slave_rdata ;
  assign local_fabric$v_to_slaves_0_rid = plic$axi4_slave_rid ;
  assign local_fabric$v_to_slaves_0_rlast = plic$axi4_slave_rlast ;
  assign local_fabric$v_to_slaves_0_rresp = plic$axi4_slave_rresp ;
  assign local_fabric$v_to_slaves_0_rvalid = plic$axi4_slave_rvalid ;
  assign local_fabric$v_to_slaves_0_wready = plic$axi4_slave_wready ;
  assign local_fabric$v_to_slaves_1_arready = clint$axi4_slave_arready ;
  assign local_fabric$v_to_slaves_1_awready = clint$axi4_slave_awready ;
  assign local_fabric$v_to_slaves_1_bid = clint$axi4_slave_bid ;
  assign local_fabric$v_to_slaves_1_bresp = clint$axi4_slave_bresp ;
  assign local_fabric$v_to_slaves_1_bvalid = clint$axi4_slave_bvalid ;
  assign local_fabric$v_to_slaves_1_rdata = clint$axi4_slave_rdata ;
  assign local_fabric$v_to_slaves_1_rid = clint$axi4_slave_rid ;
  assign local_fabric$v_to_slaves_1_rlast = clint$axi4_slave_rlast ;
  assign local_fabric$v_to_slaves_1_rresp = clint$axi4_slave_rresp ;
  assign local_fabric$v_to_slaves_1_rvalid = clint$axi4_slave_rvalid ;
  assign local_fabric$v_to_slaves_1_wready = clint$axi4_slave_wready ;
  assign local_fabric$v_to_slaves_2_arready = cpu$imem_dma_server_arready ;
  assign local_fabric$v_to_slaves_2_awready = cpu$imem_dma_server_awready ;
  assign local_fabric$v_to_slaves_2_bid = cpu$imem_dma_server_bid ;
  assign local_fabric$v_to_slaves_2_bresp = cpu$imem_dma_server_bresp ;
  assign local_fabric$v_to_slaves_2_bvalid = cpu$imem_dma_server_bvalid ;
  assign local_fabric$v_to_slaves_2_rdata = cpu$imem_dma_server_rdata ;
  assign local_fabric$v_to_slaves_2_rid = cpu$imem_dma_server_rid ;
  assign local_fabric$v_to_slaves_2_rlast = cpu$imem_dma_server_rlast ;
  assign local_fabric$v_to_slaves_2_rresp = cpu$imem_dma_server_rresp ;
  assign local_fabric$v_to_slaves_2_rvalid = cpu$imem_dma_server_rvalid ;
  assign local_fabric$v_to_slaves_2_wready = cpu$imem_dma_server_wready ;
  assign local_fabric$v_to_slaves_3_arready = cpu$dmem_dma_server_arready ;
  assign local_fabric$v_to_slaves_3_awready = cpu$dmem_dma_server_awready ;
  assign local_fabric$v_to_slaves_3_bid = cpu$dmem_dma_server_bid ;
  assign local_fabric$v_to_slaves_3_bresp = cpu$dmem_dma_server_bresp ;
  assign local_fabric$v_to_slaves_3_bvalid = cpu$dmem_dma_server_bvalid ;
  assign local_fabric$v_to_slaves_3_rdata = cpu$dmem_dma_server_rdata ;
  assign local_fabric$v_to_slaves_3_rid = cpu$dmem_dma_server_rid ;
  assign local_fabric$v_to_slaves_3_rlast = cpu$dmem_dma_server_rlast ;
  assign local_fabric$v_to_slaves_3_rresp = cpu$dmem_dma_server_rresp ;
  assign local_fabric$v_to_slaves_3_rvalid = cpu$dmem_dma_server_rvalid ;
  assign local_fabric$v_to_slaves_3_wready = cpu$dmem_dma_server_wready ;
  assign local_fabric$EN_reset =
	     WILL_FIRE_RL_dm_stub_read_req_rl &&
	     dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] == 4'd1 ||
	     WILL_FIRE_RL_rl_cpu_hart0_reset_from_soc_start ;
  assign local_fabric$EN_set_verbosity = 1'b0 ;

  // submodule plic
  assign plic$axi4_slave_araddr = local_fabric$v_to_slaves_0_araddr ;
  assign plic$axi4_slave_arburst = local_fabric$v_to_slaves_0_arburst ;
  assign plic$axi4_slave_arcache = local_fabric$v_to_slaves_0_arcache ;
  assign plic$axi4_slave_arid = local_fabric$v_to_slaves_0_arid ;
  assign plic$axi4_slave_arlen = local_fabric$v_to_slaves_0_arlen ;
  assign plic$axi4_slave_arlock = local_fabric$v_to_slaves_0_arlock ;
  assign plic$axi4_slave_arprot = local_fabric$v_to_slaves_0_arprot ;
  assign plic$axi4_slave_arqos = local_fabric$v_to_slaves_0_arqos ;
  assign plic$axi4_slave_arregion = local_fabric$v_to_slaves_0_arregion ;
  assign plic$axi4_slave_arsize = local_fabric$v_to_slaves_0_arsize ;
  assign plic$axi4_slave_arvalid = local_fabric$v_to_slaves_0_arvalid ;
  assign plic$axi4_slave_awaddr = local_fabric$v_to_slaves_0_awaddr ;
  assign plic$axi4_slave_awburst = local_fabric$v_to_slaves_0_awburst ;
  assign plic$axi4_slave_awcache = local_fabric$v_to_slaves_0_awcache ;
  assign plic$axi4_slave_awid = local_fabric$v_to_slaves_0_awid ;
  assign plic$axi4_slave_awlen = local_fabric$v_to_slaves_0_awlen ;
  assign plic$axi4_slave_awlock = local_fabric$v_to_slaves_0_awlock ;
  assign plic$axi4_slave_awprot = local_fabric$v_to_slaves_0_awprot ;
  assign plic$axi4_slave_awqos = local_fabric$v_to_slaves_0_awqos ;
  assign plic$axi4_slave_awregion = local_fabric$v_to_slaves_0_awregion ;
  assign plic$axi4_slave_awsize = local_fabric$v_to_slaves_0_awsize ;
  assign plic$axi4_slave_awvalid = local_fabric$v_to_slaves_0_awvalid ;
  assign plic$axi4_slave_bready = local_fabric$v_to_slaves_0_bready ;
  assign plic$axi4_slave_rready = local_fabric$v_to_slaves_0_rready ;
  assign plic$axi4_slave_wdata = local_fabric$v_to_slaves_0_wdata ;
  assign plic$axi4_slave_wlast = local_fabric$v_to_slaves_0_wlast ;
  assign plic$axi4_slave_wstrb = local_fabric$v_to_slaves_0_wstrb ;
  assign plic$axi4_slave_wvalid = local_fabric$v_to_slaves_0_wvalid ;
  assign plic$set_addr_map_addr_base = soc_map$m_plic_addr_base ;
  assign plic$set_addr_map_addr_lim = soc_map$m_plic_addr_lim ;
  assign plic$set_verbosity_verbosity = 4'h0 ;
  assign plic$v_sources_0_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_0_m_interrupt_req_set_not_clear ;
  assign plic$v_sources_10_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_10_m_interrupt_req_set_not_clear ;
  assign plic$v_sources_11_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_11_m_interrupt_req_set_not_clear ;
  assign plic$v_sources_12_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_12_m_interrupt_req_set_not_clear ;
  assign plic$v_sources_13_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_13_m_interrupt_req_set_not_clear ;
  assign plic$v_sources_14_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_14_m_interrupt_req_set_not_clear ;
  assign plic$v_sources_15_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_15_m_interrupt_req_set_not_clear ;
  assign plic$v_sources_1_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_1_m_interrupt_req_set_not_clear ;
  assign plic$v_sources_2_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_2_m_interrupt_req_set_not_clear ;
  assign plic$v_sources_3_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_3_m_interrupt_req_set_not_clear ;
  assign plic$v_sources_4_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_4_m_interrupt_req_set_not_clear ;
  assign plic$v_sources_5_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_5_m_interrupt_req_set_not_clear ;
  assign plic$v_sources_6_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_6_m_interrupt_req_set_not_clear ;
  assign plic$v_sources_7_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_7_m_interrupt_req_set_not_clear ;
  assign plic$v_sources_8_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_8_m_interrupt_req_set_not_clear ;
  assign plic$v_sources_9_m_interrupt_req_set_not_clear =
	     core_external_interrupt_sources_9_m_interrupt_req_set_not_clear ;
  assign plic$EN_set_verbosity = 1'b0 ;
  assign plic$EN_show_PLIC_state = 1'b0 ;
  assign plic$EN_server_reset_request_put =
	     WILL_FIRE_RL_dm_stub_read_req_rl &&
	     dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] == 4'd1 ||
	     WILL_FIRE_RL_rl_cpu_hart0_reset_from_soc_start ;
  assign plic$EN_server_reset_response_get =
	     WILL_FIRE_RL_dm_stub_reset_rsp_rl ||
	     WILL_FIRE_RL_rl_cpu_hart0_reset_complete ;
  assign plic$EN_set_addr_map =
	     WILL_FIRE_RL_dm_stub_reset_rsp_rl ||
	     WILL_FIRE_RL_rl_cpu_hart0_reset_complete ;

  // submodule soc_map
  assign soc_map$m_is_IO_addr_addr = 32'h0 ;
  assign soc_map$m_is_clint_addr_addr = 32'h0 ;
  assign soc_map$m_is_dtcm_addr_addr = 32'h0 ;
  assign soc_map$m_is_itcm_addr_addr = 32'h0 ;
  assign soc_map$m_is_mem_addr_addr = 32'h0 ;
  assign soc_map$m_is_nmio_addr_addr = 32'h0 ;
  assign soc_map$m_is_tcm_addr_addr = 32'h0 ;

  // remaining internal signals
  assign clint_RDY_server_reset_response_get__6_AND_cpu_ETC___d22 =
	     clint$RDY_server_reset_response_get &&
	     cpu$RDY_debug_hart_reset_server_response_get &&
	     f_reset_requestor$EMPTY_N &&
	     f_reset_rsps$FULL_N ;
  assign local_fabric_RDY_reset_AND_cpu_RDY_debug_hart__ETC___d9 =
	     local_fabric$RDY_reset &&
	     cpu$RDY_debug_hart_reset_server_request_put &&
	     f_reset_reqs$EMPTY_N &&
	     f_reset_requestor$FULL_N ;
  assign x_rdata__h7611 =
	     { 31'd0, cpu$debug_hart_reset_server_response_get } ;
  assign x_rdata__h7661 =
	     { 31'd0, cpu$debug_hart_server_run_halt_response_get } ;
  always@(dm_stub_input_Xactor_f_rd_addr$D_OUT or
	  cpu$RDY_debug_hart_csr_mem_server_request_put or
	  dm_stub_sbus_master_f_rd_addr$FULL_N or
	  plic$RDY_server_reset_request_put or
	  clint$RDY_server_reset_request_put or
	  local_fabric$RDY_reset or
	  cpu$RDY_debug_hart_reset_server_request_put or
	  f_reset_requestor$FULL_N or
	  cpu$RDY_debug_hart_server_run_halt_request_put or
	  cpu$RDY_debug_hart_gpr_mem_server_request_put)
  begin
    case (dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61])
      4'd0:
	  IF_dm_stub_input_Xactor_f_rd_addr_first__4_BIT_ETC___d54 =
	      dm_stub_sbus_master_f_rd_addr$FULL_N;
      4'd1:
	  IF_dm_stub_input_Xactor_f_rd_addr_first__4_BIT_ETC___d54 =
	      plic$RDY_server_reset_request_put &&
	      clint$RDY_server_reset_request_put &&
	      local_fabric$RDY_reset &&
	      cpu$RDY_debug_hart_reset_server_request_put &&
	      f_reset_requestor$FULL_N;
      4'd2:
	  IF_dm_stub_input_Xactor_f_rd_addr_first__4_BIT_ETC___d54 =
	      cpu$RDY_debug_hart_server_run_halt_request_put;
      4'd3:
	  IF_dm_stub_input_Xactor_f_rd_addr_first__4_BIT_ETC___d54 =
	      cpu$RDY_debug_hart_gpr_mem_server_request_put;
      default: IF_dm_stub_input_Xactor_f_rd_addr_first__4_BIT_ETC___d54 =
		   dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] != 4'd4 ||
		   cpu$RDY_debug_hart_csr_mem_server_request_put;
    endcase
  end
  always@(dm_stub_input_Xactor_f_wr_addr$D_OUT or
	  cpu$RDY_debug_hart_csr_mem_server_request_put or
	  dm_stub_sbus_master_f_wr_data$FULL_N or
	  dm_stub_sbus_master_f_wr_addr$FULL_N or
	  cpu$RDY_debug_hart_gpr_mem_server_request_put)
  begin
    case (dm_stub_input_Xactor_f_wr_addr$D_OUT[64:61])
      4'd0:
	  IF_dm_stub_input_Xactor_f_wr_addr_first__13_BI_ETC___d123 =
	      dm_stub_sbus_master_f_wr_data$FULL_N &&
	      dm_stub_sbus_master_f_wr_addr$FULL_N;
      4'd3:
	  IF_dm_stub_input_Xactor_f_wr_addr_first__13_BI_ETC___d123 =
	      cpu$RDY_debug_hart_gpr_mem_server_request_put;
      default: IF_dm_stub_input_Xactor_f_wr_addr_first__13_BI_ETC___d123 =
		   dm_stub_input_Xactor_f_wr_addr$D_OUT[64:61] != 4'd4 ||
		   cpu$RDY_debug_hart_csr_mem_server_request_put;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        dm_stub_rg_bursting <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (dm_stub_rg_bursting$EN)
	  dm_stub_rg_bursting <= `BSV_ASSIGNMENT_DELAY
	      dm_stub_rg_bursting$D_IN;
      end
    if (dm_stub_rg_writing$EN)
      dm_stub_rg_writing <= `BSV_ASSIGNMENT_DELAY dm_stub_rg_writing$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    dm_stub_rg_bursting = 1'h0;
    dm_stub_rg_writing = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_cpu_hart0_reset_from_soc_start)
	begin
	  v__h5325 = $stime;
	  #0;
	end
    v__h5319 = v__h5325 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_cpu_hart0_reset_from_soc_start)
	$display("%0d: Core.rl_cpu_hart0_reset_from_soc_start", v__h5319);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_cpu_hart0_reset_complete)
	begin
	  v__h5560 = $stime;
	  #0;
	end
    v__h5554 = v__h5560 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_cpu_hart0_reset_complete)
	$display("%0d: Core.rl_cpu_hart0_reset_complete", v__h5554);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dm_stub_reset_rsp_rl)
	begin
	  v__h7559 = $stime;
	  #0;
	end
    v__h7553 = v__h7559 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dm_stub_reset_rsp_rl)
	$display("%0d: Core.rl_cpu_hart0_reset_complete", v__h7553);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dm_stub_read_req_rl &&
	  dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] == 4'd1)
	begin
	  v__h7024 = $stime;
	  #0;
	end
    v__h7018 = v__h7024 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dm_stub_read_req_rl &&
	  dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] == 4'd1)
	$display("%0d: Core.rl_cpu_hart0_reset_from_dm_start", v__h7018);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dm_stub_read_req_rl &&
	  dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] != 4'd0 &&
	  dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] != 4'd1 &&
	  dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] != 4'd2 &&
	  dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] != 4'd3 &&
	  dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] != 4'd4)
	$display("Invalid debug read request, arid = %0d",
		 dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dm_stub_read_req_rl &&
	  dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] != 4'd0 &&
	  dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] != 4'd1 &&
	  dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] != 4'd2 &&
	  dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] != 4'd3 &&
	  dm_stub_input_Xactor_f_rd_addr$D_OUT[64:61] != 4'd4)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dm_stub_write_req_rl &&
	  dm_stub_input_Xactor_f_wr_addr$D_OUT[64:61] != 4'd0 &&
	  dm_stub_input_Xactor_f_wr_addr$D_OUT[64:61] != 4'd3 &&
	  dm_stub_input_Xactor_f_wr_addr$D_OUT[64:61] != 4'd4)
	$display("Invalid debug write request, awid = %0d",
		 dm_stub_input_Xactor_f_wr_addr$D_OUT[64:61]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dm_stub_write_req_rl &&
	  dm_stub_input_Xactor_f_wr_addr$D_OUT[64:61] != 4'd0 &&
	  dm_stub_input_Xactor_f_wr_addr$D_OUT[64:61] != 4'd3 &&
	  dm_stub_input_Xactor_f_wr_addr$D_OUT[64:61] != 4'd4)
	$finish(32'd0);
  end
  // synopsys translate_on
endmodule  // mkCore

